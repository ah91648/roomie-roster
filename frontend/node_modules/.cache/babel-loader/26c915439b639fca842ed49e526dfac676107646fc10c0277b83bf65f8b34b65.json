{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:'/api',timeout:10000,headers:{'Content-Type':'application/json'},withCredentials:true// Include cookies for CSRF tokens\n});// CSRF token management\nlet csrfToken=null;const getCSRFToken=async()=>{if(!csrfToken){try{const response=await api.get('/auth/profile');if(response.data&&response.data.user&&response.data.user.csrf_token){csrfToken=response.data.user.csrf_token;}}catch(error){// CSRF token not available (user not logged in)\nconsole.log('CSRF token not available');}}return csrfToken;};// Request interceptor for logging and CSRF token\napi.interceptors.request.use(async config=>{console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);// Add CSRF token for non-GET requests\nif(config.method!=='get'){const token=await getCSRFToken();if(token){config.headers['X-CSRF-Token']=token;}}return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2,_error$response3;console.error('API Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);// Clear CSRF token on auth errors to force refresh\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403||((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401){csrfToken=null;}return Promise.reject(error);});// Export function to clear tokens (for logout)\nexport const clearTokens=()=>{csrfToken=null;};// Chores API\nexport const choreAPI={getAll:()=>api.get('/chores'),create:chore=>api.post('/chores',chore),update:(id,chore)=>api.put(`/chores/${id}`,chore),delete:id=>api.delete(`/chores/${id}`)};// Sub-chores API\nexport const subChoreAPI={getAll:choreId=>api.get(`/chores/${choreId}/sub-chores`),create:(choreId,subChore)=>api.post(`/chores/${choreId}/sub-chores`,subChore),update:(choreId,subChoreId,subChore)=>api.put(`/chores/${choreId}/sub-chores/${subChoreId}`,subChore),delete:(choreId,subChoreId)=>api.delete(`/chores/${choreId}/sub-chores/${subChoreId}`),toggle:function(choreId,subChoreId){let assignmentIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return api.post(`/chores/${choreId}/sub-chores/${subChoreId}/toggle`,{assignment_index:assignmentIndex});},getProgress:function(choreId){let assignmentIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return api.get(`/chores/${choreId}/progress${assignmentIndex!==null?`?assignment_index=${assignmentIndex}`:''}`);}};// Shopping list API\nexport const shoppingListAPI={getAll:function(){let status=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return api.get(`/shopping-list${status?`?status=${status}`:''}`);},create:item=>api.post('/shopping-list',item),update:(id,item)=>api.put(`/shopping-list/${id}`,item),delete:id=>api.delete(`/shopping-list/${id}`),markPurchased:(id,purchaseData)=>api.post(`/shopping-list/${id}/purchase`,purchaseData),getHistory:function(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;return api.get(`/shopping-list/history?days=${days}`);},getMetadata:()=>api.get('/shopping-list/metadata'),clearAllHistory:()=>api.post('/shopping-list/clear-all-history'),clearHistoryFromDate:fromDate=>api.post('/shopping-list/clear-history-from-date',{from_date:fromDate})};// Request API\nexport const requestAPI={getAll:function(){let status=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return api.get(`/requests${status?`?status=${status}`:''}`);},create:request=>api.post('/requests',request),update:(id,request)=>api.put(`/requests/${id}`,request),delete:id=>api.delete(`/requests/${id}`),approve:(id,approvalData)=>api.post(`/requests/${id}/approve`,approvalData),getPendingForUser:userId=>api.get(`/requests/pending/${userId}`),getMetadata:()=>api.get('/requests/metadata')};// Roommates API\nexport const roommateAPI={getAll:()=>api.get('/roommates'),create:roommate=>api.post('/roommates',roommate),update:(id,roommate)=>api.put(`/roommates/${id}`,roommate),delete:id=>api.delete(`/roommates/${id}`)};// Assignments API\nexport const assignmentAPI={assignChores:()=>api.post('/assign-chores'),getCurrent:()=>api.get('/current-assignments'),resetCycle:()=>api.post('/reset-cycle')};// Laundry scheduling API\nexport const laundryAPI={getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryParams=new URLSearchParams();if(params.date)queryParams.append('date',params.date);if(params.roommate_id)queryParams.append('roommate_id',params.roommate_id);if(params.status)queryParams.append('status',params.status);const queryString=queryParams.toString();return api.get(`/laundry-slots${queryString?`?${queryString}`:''}`);},create:slot=>api.post('/laundry-slots',slot),update:(id,slot)=>api.put(`/laundry-slots/${id}`,slot),delete:id=>api.delete(`/laundry-slots/${id}`),complete:function(id){let completionData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return api.post(`/laundry-slots/${id}/complete`,completionData);},checkConflicts:conflictData=>api.post('/laundry-slots/check-conflicts',conflictData),getMetadata:()=>api.get('/laundry-slots/metadata')};// Calendar integration API\nexport const calendarAPI={getStatus:()=>api.get('/calendar/status'),setupCredentials:credentials=>api.post('/calendar/setup-credentials',{credentials}),getOAuthUrl:()=>api.get('/calendar/oauth-url'),getCalendarList:()=>api.get('/calendar/calendars'),getConfig:()=>api.get('/calendar/config'),saveConfig:config=>api.post('/calendar/config',config),createEvent:eventData=>api.post('/calendar/create-event',eventData),deleteEvent:(calendarId,eventId)=>api.delete('/calendar/delete-event',{data:{calendar_id:calendarId,event_id:eventId}})};// Authentication API\nexport const authAPI={getStatus:()=>api.get('/auth/status'),initiateGoogleLogin:redirectUri=>api.post('/auth/google-login',{redirect_uri:redirectUri}),getProfile:()=>api.get('/auth/profile'),refreshSession:()=>api.post('/auth/refresh'),linkRoommate:roommateId=>api.post('/auth/link-roommate',{roommate_id:roommateId}),unlinkRoommate:()=>api.post('/auth/unlink-roommate'),logout:()=>api.post('/auth/logout'),revokeAccess:()=>api.post('/auth/revoke'),setupCredentials:credentials=>api.post('/auth/setup-credentials',{credentials})};// User Calendar API\nexport const userCalendarAPI={getConfig:()=>api.get('/user-calendar/config'),saveConfig:config=>api.post('/user-calendar/config',config),getCalendars:()=>api.get('/user-calendar/calendars'),syncChores:()=>api.post('/user-calendar/sync-chores'),getSyncStatus:()=>api.get('/user-calendar/sync-status')};// Application state API\nexport const stateAPI={get:()=>api.get('/state'),health:()=>api.get('/health')};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","withCredentials","csrfToken","getCSRFToken","response","get","data","user","csrf_token","error","console","log","interceptors","request","use","config","method","toUpperCase","url","token","Promise","reject","_error$response","_error$response2","_error$response3","message","status","clearTokens","choreAPI","getAll","chore","post","update","id","put","delete","subChoreAPI","choreId","subChore","subChoreId","toggle","assignmentIndex","arguments","length","undefined","assignment_index","getProgress","shoppingListAPI","item","markPurchased","purchaseData","getHistory","days","getMetadata","clearAllHistory","clearHistoryFromDate","fromDate","from_date","requestAPI","approve","approvalData","getPendingForUser","userId","roommateAPI","roommate","assignmentAPI","assignChores","getCurrent","resetCycle","laundryAPI","params","queryParams","URLSearchParams","date","append","roommate_id","queryString","toString","slot","complete","completionData","checkConflicts","conflictData","calendarAPI","getStatus","setupCredentials","credentials","getOAuthUrl","getCalendarList","getConfig","saveConfig","createEvent","eventData","deleteEvent","calendarId","eventId","calendar_id","event_id","authAPI","initiateGoogleLogin","redirectUri","redirect_uri","getProfile","refreshSession","linkRoommate","roommateId","unlinkRoommate","logout","revokeAccess","userCalendarAPI","getCalendars","syncChores","getSyncStatus","stateAPI","health"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // Include cookies for CSRF tokens\n});\n\n// CSRF token management\nlet csrfToken = null;\n\nconst getCSRFToken = async () => {\n  if (!csrfToken) {\n    try {\n      const response = await api.get('/auth/profile');\n      if (response.data && response.data.user && response.data.user.csrf_token) {\n        csrfToken = response.data.user.csrf_token;\n      }\n    } catch (error) {\n      // CSRF token not available (user not logged in)\n      console.log('CSRF token not available');\n    }\n  }\n  return csrfToken;\n};\n\n// Request interceptor for logging and CSRF token\napi.interceptors.request.use(\n  async (config) => {\n    console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n    \n    // Add CSRF token for non-GET requests\n    if (config.method !== 'get') {\n      const token = await getCSRFToken();\n      if (token) {\n        config.headers['X-CSRF-Token'] = token;\n      }\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Clear CSRF token on auth errors to force refresh\n    if (error.response?.status === 403 || error.response?.status === 401) {\n      csrfToken = null;\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Export function to clear tokens (for logout)\nexport const clearTokens = () => {\n  csrfToken = null;\n};\n\n// Chores API\nexport const choreAPI = {\n  getAll: () => api.get('/chores'),\n  create: (chore) => api.post('/chores', chore),\n  update: (id, chore) => api.put(`/chores/${id}`, chore),\n  delete: (id) => api.delete(`/chores/${id}`),\n};\n\n// Sub-chores API\nexport const subChoreAPI = {\n  getAll: (choreId) => api.get(`/chores/${choreId}/sub-chores`),\n  create: (choreId, subChore) => api.post(`/chores/${choreId}/sub-chores`, subChore),\n  update: (choreId, subChoreId, subChore) => api.put(`/chores/${choreId}/sub-chores/${subChoreId}`, subChore),\n  delete: (choreId, subChoreId) => api.delete(`/chores/${choreId}/sub-chores/${subChoreId}`),\n  toggle: (choreId, subChoreId, assignmentIndex = null) => \n    api.post(`/chores/${choreId}/sub-chores/${subChoreId}/toggle`, { assignment_index: assignmentIndex }),\n  getProgress: (choreId, assignmentIndex = null) => \n    api.get(`/chores/${choreId}/progress${assignmentIndex !== null ? `?assignment_index=${assignmentIndex}` : ''}`),\n};\n\n// Shopping list API\nexport const shoppingListAPI = {\n  getAll: (status = null) => api.get(`/shopping-list${status ? `?status=${status}` : ''}`),\n  create: (item) => api.post('/shopping-list', item),\n  update: (id, item) => api.put(`/shopping-list/${id}`, item),\n  delete: (id) => api.delete(`/shopping-list/${id}`),\n  markPurchased: (id, purchaseData) => api.post(`/shopping-list/${id}/purchase`, purchaseData),\n  getHistory: (days = 30) => api.get(`/shopping-list/history?days=${days}`),\n  getMetadata: () => api.get('/shopping-list/metadata'),\n  clearAllHistory: () => api.post('/shopping-list/clear-all-history'),\n  clearHistoryFromDate: (fromDate) => api.post('/shopping-list/clear-history-from-date', { from_date: fromDate }),\n};\n\n// Request API\nexport const requestAPI = {\n  getAll: (status = null) => api.get(`/requests${status ? `?status=${status}` : ''}`),\n  create: (request) => api.post('/requests', request),\n  update: (id, request) => api.put(`/requests/${id}`, request),\n  delete: (id) => api.delete(`/requests/${id}`),\n  approve: (id, approvalData) => api.post(`/requests/${id}/approve`, approvalData),\n  getPendingForUser: (userId) => api.get(`/requests/pending/${userId}`),\n  getMetadata: () => api.get('/requests/metadata'),\n};\n\n// Roommates API\nexport const roommateAPI = {\n  getAll: () => api.get('/roommates'),\n  create: (roommate) => api.post('/roommates', roommate),\n  update: (id, roommate) => api.put(`/roommates/${id}`, roommate),\n  delete: (id) => api.delete(`/roommates/${id}`),\n};\n\n// Assignments API\nexport const assignmentAPI = {\n  assignChores: () => api.post('/assign-chores'),\n  getCurrent: () => api.get('/current-assignments'),\n  resetCycle: () => api.post('/reset-cycle'),\n};\n\n// Laundry scheduling API\nexport const laundryAPI = {\n  getAll: (params = {}) => {\n    const queryParams = new URLSearchParams();\n    if (params.date) queryParams.append('date', params.date);\n    if (params.roommate_id) queryParams.append('roommate_id', params.roommate_id);\n    if (params.status) queryParams.append('status', params.status);\n    \n    const queryString = queryParams.toString();\n    return api.get(`/laundry-slots${queryString ? `?${queryString}` : ''}`);\n  },\n  create: (slot) => api.post('/laundry-slots', slot),\n  update: (id, slot) => api.put(`/laundry-slots/${id}`, slot),\n  delete: (id) => api.delete(`/laundry-slots/${id}`),\n  complete: (id, completionData = {}) => api.post(`/laundry-slots/${id}/complete`, completionData),\n  checkConflicts: (conflictData) => api.post('/laundry-slots/check-conflicts', conflictData),\n  getMetadata: () => api.get('/laundry-slots/metadata'),\n};\n\n// Calendar integration API\nexport const calendarAPI = {\n  getStatus: () => api.get('/calendar/status'),\n  setupCredentials: (credentials) => api.post('/calendar/setup-credentials', { credentials }),\n  getOAuthUrl: () => api.get('/calendar/oauth-url'),\n  getCalendarList: () => api.get('/calendar/calendars'),\n  getConfig: () => api.get('/calendar/config'),\n  saveConfig: (config) => api.post('/calendar/config', config),\n  createEvent: (eventData) => api.post('/calendar/create-event', eventData),\n  deleteEvent: (calendarId, eventId) => api.delete('/calendar/delete-event', { data: { calendar_id: calendarId, event_id: eventId } }),\n};\n\n// Authentication API\nexport const authAPI = {\n  getStatus: () => api.get('/auth/status'),\n  initiateGoogleLogin: (redirectUri) => api.post('/auth/google-login', { redirect_uri: redirectUri }),\n  getProfile: () => api.get('/auth/profile'),\n  refreshSession: () => api.post('/auth/refresh'),\n  linkRoommate: (roommateId) => api.post('/auth/link-roommate', { roommate_id: roommateId }),\n  unlinkRoommate: () => api.post('/auth/unlink-roommate'),\n  logout: () => api.post('/auth/logout'),\n  revokeAccess: () => api.post('/auth/revoke'),\n  setupCredentials: (credentials) => api.post('/auth/setup-credentials', { credentials }),\n};\n\n// User Calendar API\nexport const userCalendarAPI = {\n  getConfig: () => api.get('/user-calendar/config'),\n  saveConfig: (config) => api.post('/user-calendar/config', config),\n  getCalendars: () => api.get('/user-calendar/calendars'),\n  syncChores: () => api.post('/user-calendar/sync-chores'),\n  getSyncStatus: () => api.get('/user-calendar/sync-status'),\n};\n\n// Application state API\nexport const stateAPI = {\n  get: () => api.get('/state'),\n  health: () => api.get('/health'),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}