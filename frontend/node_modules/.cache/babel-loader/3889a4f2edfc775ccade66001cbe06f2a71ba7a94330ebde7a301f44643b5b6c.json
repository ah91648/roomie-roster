{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{roommateAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoommateSelector=_ref=>{let{onCancel=null,title=\"Link Your Account\",subtitle=\"Select which roommate you are to continue\"}=_ref;const{linkRoommate,user,isLoading:authLoading}=useAuth();const[roommates,setRoommates]=useState([]);const[selectedRoommate,setSelectedRoommate]=useState(null);const[loading,setLoading]=useState(true);const[linking,setLinking]=useState(false);const[error,setError]=useState(null);// Load roommates on component mount\nuseEffect(()=>{const loadRoommates=async()=>{try{setLoading(true);setError(null);const response=await roommateAPI.getAll();// Filter out roommates that are already linked to Google accounts\nconst availableRoommates=response.data.filter(roommate=>!roommate.google_id||roommate.google_id===(user===null||user===void 0?void 0:user.google_id));setRoommates(availableRoommates);}catch(err){var _err$response,_err$response$data;setError('Failed to load roommates: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message));}finally{setLoading(false);}};loadRoommates();},[user===null||user===void 0?void 0:user.google_id]);const handleRoommateSelect=roommate=>{setSelectedRoommate(roommate);setError(null);};const handleLinkRoommate=async()=>{if(!selectedRoommate){setError('Please select a roommate');return;}try{setLinking(true);setError(null);const result=await linkRoommate(selectedRoommate.id);if(result.success){// Success! The AuthContext will handle the state update\nconsole.log('Successfully linked to roommate:',selectedRoommate.name);}else{setError(result.error||'Failed to link roommate');}}catch(err){setError('Unexpected error during linking');console.error('Link roommate error:',err);}finally{setLinking(false);}};const handleSkip=()=>{if(onCancel){onCancel();}};if(loading||authLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"roommate-selector\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading roommates...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-selector-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),subtitle&&/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:subtitle})]}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-info-preview\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar-small\",children:user.picture?/*#__PURE__*/_jsx(\"img\",{src:user.picture,alt:user.name}):/*#__PURE__*/_jsx(\"div\",{className:\"avatar-placeholder\",children:user.name.charAt(0)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-details\",children:[/*#__PURE__*/_jsx(\"strong\",{children:user.name}),/*#__PURE__*/_jsx(\"span\",{className:\"user-email\",children:user.email})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),roommates.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-roommates\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No available roommates found.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-small\",children:\"All roommates may already be linked to Google accounts, or there might be an issue loading the data.\"}),onCancel&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSkip,className:\"button secondary\",children:\"Continue Without Linking\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-selector-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"roommate-instructions\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Choose which roommate profile belongs to you:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"roommate-list\",children:roommates.map(roommate=>/*#__PURE__*/_jsxs(\"div\",{className:`roommate-option ${(selectedRoommate===null||selectedRoommate===void 0?void 0:selectedRoommate.id)===roommate.id?'selected':''} ${roommate.google_id?'already-linked':''}`,onClick:()=>!roommate.google_id&&handleRoommateSelect(roommate),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"roommate-name\",children:roommate.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-details\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"points\",children:[roommate.current_cycle_points,\" cycle points\"]}),roommate.google_id&&roommate.google_id===(user===null||user===void 0?void 0:user.google_id)&&/*#__PURE__*/_jsx(\"span\",{className:\"status-badge linked-to-you\",children:\"Linked to you\"}),roommate.google_id&&roommate.google_id!==(user===null||user===void 0?void 0:user.google_id)&&/*#__PURE__*/_jsx(\"span\",{className:\"status-badge already-linked\",children:\"Already linked\"})]})]}),(selectedRoommate===null||selectedRoommate===void 0?void 0:selectedRoommate.id)===roommate.id&&/*#__PURE__*/_jsx(\"div\",{className:\"selection-indicator\",children:\"\\u2713\"}),roommate.google_id&&roommate.google_id!==(user===null||user===void 0?void 0:user.google_id)&&/*#__PURE__*/_jsx(\"div\",{className:\"unavailable-overlay\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Unavailable\"})})]},roommate.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-selector-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleLinkRoommate,disabled:!selectedRoommate||linking,className:\"button primary\",children:linking?'Linking...':'Link Account'}),onCancel&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSkip,disabled:linking,className:\"button secondary\",children:\"Skip for Now\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"linking-info\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Linking your Google account to a roommate allows you to:\"]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-small\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"See your personalized chore assignments\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Sync chores to your Google Calendar\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Track your contribution points\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Use all RoomieRoster features\"})]})]})]})]});};export default RoommateSelector;","map":{"version":3,"names":["React","useState","useEffect","useAuth","roommateAPI","jsx","_jsx","jsxs","_jsxs","RoommateSelector","_ref","onCancel","title","subtitle","linkRoommate","user","isLoading","authLoading","roommates","setRoommates","selectedRoommate","setSelectedRoommate","loading","setLoading","linking","setLinking","error","setError","loadRoommates","response","getAll","availableRoommates","data","filter","roommate","google_id","err","_err$response","_err$response$data","message","handleRoommateSelect","handleLinkRoommate","result","id","success","console","log","name","handleSkip","className","children","picture","src","alt","charAt","email","length","onClick","map","current_cycle_points","disabled"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/components/RoommateSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { roommateAPI } from '../services/api';\n\nconst RoommateSelector = ({ \n  onCancel = null,\n  title = \"Link Your Account\",\n  subtitle = \"Select which roommate you are to continue\"\n}) => {\n  const { linkRoommate, user, isLoading: authLoading } = useAuth();\n  const [roommates, setRoommates] = useState([]);\n  const [selectedRoommate, setSelectedRoommate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [linking, setLinking] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load roommates on component mount\n  useEffect(() => {\n    const loadRoommates = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await roommateAPI.getAll();\n        \n        // Filter out roommates that are already linked to Google accounts\n        const availableRoommates = response.data.filter(roommate => \n          !roommate.google_id || roommate.google_id === user?.google_id\n        );\n        \n        setRoommates(availableRoommates);\n      } catch (err) {\n        setError('Failed to load roommates: ' + (err.response?.data?.error || err.message));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadRoommates();\n  }, [user?.google_id]);\n\n  const handleRoommateSelect = (roommate) => {\n    setSelectedRoommate(roommate);\n    setError(null);\n  };\n\n  const handleLinkRoommate = async () => {\n    if (!selectedRoommate) {\n      setError('Please select a roommate');\n      return;\n    }\n\n    try {\n      setLinking(true);\n      setError(null);\n      \n      const result = await linkRoommate(selectedRoommate.id);\n      \n      if (result.success) {\n        // Success! The AuthContext will handle the state update\n        console.log('Successfully linked to roommate:', selectedRoommate.name);\n      } else {\n        setError(result.error || 'Failed to link roommate');\n      }\n    } catch (err) {\n      setError('Unexpected error during linking');\n      console.error('Link roommate error:', err);\n    } finally {\n      setLinking(false);\n    }\n  };\n\n  const handleSkip = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  if (loading || authLoading) {\n    return (\n      <div className=\"roommate-selector\">\n        <div className=\"loading\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading roommates...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"roommate-selector\">\n      <div className=\"roommate-selector-header\">\n        <h2>{title}</h2>\n        {subtitle && <p className=\"subtitle\">{subtitle}</p>}\n      </div>\n\n      {user && (\n        <div className=\"user-info-preview\">\n          <div className=\"user-avatar-small\">\n            {user.picture ? (\n              <img src={user.picture} alt={user.name} />\n            ) : (\n              <div className=\"avatar-placeholder\">{user.name.charAt(0)}</div>\n            )}\n          </div>\n          <div className=\"user-details\">\n            <strong>{user.name}</strong>\n            <span className=\"user-email\">{user.email}</span>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error\">\n          {error}\n        </div>\n      )}\n\n      {roommates.length === 0 ? (\n        <div className=\"no-roommates\">\n          <p>No available roommates found.</p>\n          <p className=\"text-small\">\n            All roommates may already be linked to Google accounts, or there might be an issue loading the data.\n          </p>\n          {onCancel && (\n            <button onClick={handleSkip} className=\"button secondary\">\n              Continue Without Linking\n            </button>\n          )}\n        </div>\n      ) : (\n        <div className=\"roommate-selector-content\">\n          <div className=\"roommate-instructions\">\n            <p>Choose which roommate profile belongs to you:</p>\n          </div>\n\n          <div className=\"roommate-list\">\n            {roommates.map((roommate) => (\n              <div\n                key={roommate.id}\n                className={`roommate-option ${\n                  selectedRoommate?.id === roommate.id ? 'selected' : ''\n                } ${roommate.google_id ? 'already-linked' : ''}`}\n                onClick={() => !roommate.google_id && handleRoommateSelect(roommate)}\n              >\n                <div className=\"roommate-info\">\n                  <div className=\"roommate-name\">{roommate.name}</div>\n                  <div className=\"roommate-details\">\n                    <span className=\"points\">\n                      {roommate.current_cycle_points} cycle points\n                    </span>\n                    {roommate.google_id && roommate.google_id === user?.google_id && (\n                      <span className=\"status-badge linked-to-you\">Linked to you</span>\n                    )}\n                    {roommate.google_id && roommate.google_id !== user?.google_id && (\n                      <span className=\"status-badge already-linked\">Already linked</span>\n                    )}\n                  </div>\n                </div>\n                \n                {selectedRoommate?.id === roommate.id && (\n                  <div className=\"selection-indicator\">✓</div>\n                )}\n                \n                {roommate.google_id && roommate.google_id !== user?.google_id && (\n                  <div className=\"unavailable-overlay\">\n                    <span>Unavailable</span>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"roommate-selector-actions\">\n            <button\n              onClick={handleLinkRoommate}\n              disabled={!selectedRoommate || linking}\n              className=\"button primary\"\n            >\n              {linking ? 'Linking...' : 'Link Account'}\n            </button>\n            \n            {onCancel && (\n              <button\n                onClick={handleSkip}\n                disabled={linking}\n                className=\"button secondary\"\n              >\n                Skip for Now\n              </button>\n            )}\n          </div>\n\n          <div className=\"linking-info\">\n            <p className=\"text-small\">\n              <strong>Note:</strong> Linking your Google account to a roommate allows you to:\n            </p>\n            <ul className=\"text-small\">\n              <li>See your personalized chore assignments</li>\n              <li>Sync chores to your Google Calendar</li>\n              <li>Track your contribution points</li>\n              <li>Use all RoomieRoster features</li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoommateSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}