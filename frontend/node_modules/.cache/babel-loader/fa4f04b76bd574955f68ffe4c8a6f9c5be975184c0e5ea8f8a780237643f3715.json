{"ast":null,"code":"import React,{useState,useEffect}from'react';import{subChoreAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SubChoreProgress=_ref=>{let{chore,assignment,assignmentIndex,onProgressUpdate}=_ref;const[progress,setProgress]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[subChores,setSubChores]=useState([]);useEffect(()=>{if(chore&&chore.id){loadProgressAndSubChores();}},[chore,assignment]);const loadProgressAndSubChores=async()=>{try{setLoading(true);setError(null);// Load sub-chores for the chore\nconst subChoresResponse=await subChoreAPI.getAll(chore.id);setSubChores(subChoresResponse.data);// Load progress for the assignment\nconst progressResponse=await subChoreAPI.getProgress(chore.id,assignmentIndex);setProgress(progressResponse.data);if(onProgressUpdate){onProgressUpdate(progressResponse.data);}}catch(err){var _err$response,_err$response$data;setError('Failed to load progress: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message));}finally{setLoading(false);}};const toggleSubChoreCompletion=async subChoreId=>{try{setError(null);await subChoreAPI.toggle(chore.id,subChoreId,assignmentIndex);// Reload progress after toggle\nawait loadProgressAndSubChores();}catch(err){var _err$response2,_err$response2$data;setError('Failed to update sub-chore: '+(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||err.message));}};const getCompletionPercentage=()=>{if(!progress||progress.total_sub_chores===0)return 0;return progress.completion_percentage;};const isSubChoreCompleted=subChoreId=>{if(!progress||!progress.sub_chore_statuses)return false;return progress.sub_chore_statuses[subChoreId.toString()]===true;};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"sub-chore-progress-loading\",children:\"Loading progress...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"sub-chore-progress-error\",children:error});}if(!subChores||subChores.length===0){return null;// Don't show anything if there are no sub-chores\n}const percentage=getCompletionPercentage();const isAssignedToCurrentUser=assignment&&assignment.roommate_name;// Could be enhanced with user context\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"sub-chore-progress\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Task Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-summary\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"progress-percentage\",children:[percentage,\"%\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-fraction\",children:[\"(\",(progress===null||progress===void 0?void 0:progress.completed_sub_chores)||0,\" of \",(progress===null||progress===void 0?void 0:progress.total_sub_chores)||0,\" completed)\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${percentage}%`}})})}),/*#__PURE__*/_jsx(\"div\",{className:\"sub-chores-checklist\",children:subChores.map(subChore=>{const isCompleted=isSubChoreCompleted(subChore.id);return/*#__PURE__*/_jsx(\"div\",{className:`sub-chore-item ${isCompleted?'completed':''}`,children:/*#__PURE__*/_jsxs(\"label\",{className:\"sub-chore-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isCompleted,onChange:()=>toggleSubChoreCompletion(subChore.id),disabled:loading}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),/*#__PURE__*/_jsx(\"span\",{className:`sub-chore-text ${isCompleted?'completed-text':''}`,children:subChore.name})]})},subChore.id);})}),assignment&&/*#__PURE__*/_jsx(\"div\",{className:\"assignment-info\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Assigned to: \",/*#__PURE__*/_jsx(\"strong\",{children:assignment.roommate_name}),assignment.due_date&&/*#__PURE__*/_jsxs(\"span\",{children:[\" \\u2022 Due: \",new Date(assignment.due_date).toLocaleDateString()]})]})})]});};export default SubChoreProgress;","map":{"version":3,"names":["React","useState","useEffect","subChoreAPI","jsx","_jsx","jsxs","_jsxs","SubChoreProgress","_ref","chore","assignment","assignmentIndex","onProgressUpdate","progress","setProgress","loading","setLoading","error","setError","subChores","setSubChores","id","loadProgressAndSubChores","subChoresResponse","getAll","data","progressResponse","getProgress","err","_err$response","_err$response$data","response","message","toggleSubChoreCompletion","subChoreId","toggle","_err$response2","_err$response2$data","getCompletionPercentage","total_sub_chores","completion_percentage","isSubChoreCompleted","sub_chore_statuses","toString","className","children","length","percentage","isAssignedToCurrentUser","roommate_name","completed_sub_chores","style","width","map","subChore","isCompleted","type","checked","onChange","disabled","name","due_date","Date","toLocaleDateString"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/components/SubChoreProgress.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { subChoreAPI } from '../services/api';\n\nconst SubChoreProgress = ({ chore, assignment, assignmentIndex, onProgressUpdate }) => {\n  const [progress, setProgress] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [subChores, setSubChores] = useState([]);\n\n  useEffect(() => {\n    if (chore && chore.id) {\n      loadProgressAndSubChores();\n    }\n  }, [chore, assignment]);\n\n  const loadProgressAndSubChores = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Load sub-chores for the chore\n      const subChoresResponse = await subChoreAPI.getAll(chore.id);\n      setSubChores(subChoresResponse.data);\n      \n      // Load progress for the assignment\n      const progressResponse = await subChoreAPI.getProgress(chore.id, assignmentIndex);\n      setProgress(progressResponse.data);\n      \n      if (onProgressUpdate) {\n        onProgressUpdate(progressResponse.data);\n      }\n    } catch (err) {\n      setError('Failed to load progress: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleSubChoreCompletion = async (subChoreId) => {\n    try {\n      setError(null);\n      await subChoreAPI.toggle(chore.id, subChoreId, assignmentIndex);\n      \n      // Reload progress after toggle\n      await loadProgressAndSubChores();\n    } catch (err) {\n      setError('Failed to update sub-chore: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const getCompletionPercentage = () => {\n    if (!progress || progress.total_sub_chores === 0) return 0;\n    return progress.completion_percentage;\n  };\n\n  const isSubChoreCompleted = (subChoreId) => {\n    if (!progress || !progress.sub_chore_statuses) return false;\n    return progress.sub_chore_statuses[subChoreId.toString()] === true;\n  };\n\n  if (loading) {\n    return <div className=\"sub-chore-progress-loading\">Loading progress...</div>;\n  }\n\n  if (error) {\n    return <div className=\"sub-chore-progress-error\">{error}</div>;\n  }\n\n  if (!subChores || subChores.length === 0) {\n    return null; // Don't show anything if there are no sub-chores\n  }\n\n  const percentage = getCompletionPercentage();\n  const isAssignedToCurrentUser = assignment && assignment.roommate_name; // Could be enhanced with user context\n\n  return (\n    <div className=\"sub-chore-progress\">\n      <div className=\"progress-header\">\n        <h4>Task Progress</h4>\n        <div className=\"progress-summary\">\n          <span className=\"progress-percentage\">{percentage}%</span>\n          <span className=\"progress-fraction\">\n            ({progress?.completed_sub_chores || 0} of {progress?.total_sub_chores || 0} completed)\n          </span>\n        </div>\n      </div>\n\n      <div className=\"progress-bar-container\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{ width: `${percentage}%` }}\n          ></div>\n        </div>\n      </div>\n\n      <div className=\"sub-chores-checklist\">\n        {subChores.map(subChore => {\n          const isCompleted = isSubChoreCompleted(subChore.id);\n          return (\n            <div key={subChore.id} className={`sub-chore-item ${isCompleted ? 'completed' : ''}`}>\n              <label className=\"sub-chore-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={isCompleted}\n                  onChange={() => toggleSubChoreCompletion(subChore.id)}\n                  disabled={loading}\n                />\n                <span className=\"checkmark\"></span>\n                <span className={`sub-chore-text ${isCompleted ? 'completed-text' : ''}`}>\n                  {subChore.name}\n                </span>\n              </label>\n            </div>\n          );\n        })}\n      </div>\n\n      {assignment && (\n        <div className=\"assignment-info\">\n          <small>\n            Assigned to: <strong>{assignment.roommate_name}</strong>\n            {assignment.due_date && (\n              <span> â€¢ Due: {new Date(assignment.due_date).toLocaleDateString()}</span>\n            )}\n          </small>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubChoreProgress;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}