{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { authAPI, clearTokens } from '../services/api';\n\n// Create the Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth action types\nconst AUTH_ACTIONS = {\n  INIT_START: 'INIT_START',\n  INIT_SUCCESS: 'INIT_SUCCESS',\n  INIT_ERROR: 'INIT_ERROR',\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT_START: 'LOGOUT_START',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_ERROR: 'LOGOUT_ERROR',\n  LINK_ROOMMATE_START: 'LINK_ROOMMATE_START',\n  LINK_ROOMMATE_SUCCESS: 'LINK_ROOMMATE_SUCCESS',\n  LINK_ROOMMATE_ERROR: 'LINK_ROOMMATE_ERROR',\n  REFRESH_USER: 'REFRESH_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Initial auth state\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  isInitialized: false,\n  needsRoommateLink: false,\n  error: null,\n  authStatus: null\n};\n\n// Auth reducer\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case AUTH_ACTIONS.INIT_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.INIT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isInitialized: true,\n        authStatus: action.payload.authStatus,\n        user: action.payload.user,\n        isAuthenticated: !!action.payload.user,\n        needsRoommateLink: action.payload.user && !action.payload.user.roommate\n      };\n    case AUTH_ACTIONS.INIT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isInitialized: true,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false\n      };\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        isAuthenticated: true,\n        needsRoommateLink: action.payload.needsRoommateLink || false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false\n      };\n    case AUTH_ACTIONS.LOGOUT_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: null,\n        isAuthenticated: false,\n        needsRoommateLink: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LINK_ROOMMATE_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LINK_ROOMMATE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        needsRoommateLink: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LINK_ROOMMATE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.REFRESH_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: !!action.payload.user,\n        needsRoommateLink: action.payload.user && !action.payload.user.roommate\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\n\n// Auth Provider Component\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Initialize authentication state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      dispatch({\n        type: AUTH_ACTIONS.INIT_START\n      });\n      try {\n        // Get auth service status\n        const statusResponse = await authAPI.getStatus();\n        const authStatus = statusResponse.data;\n\n        // Try to get current user profile\n        let user = null;\n        try {\n          const profileResponse = await authAPI.getProfile();\n          user = profileResponse.data.user;\n        } catch (profileError) {\n          var _profileError$respons, _profileError$respons2;\n          // User not authenticated, which is fine\n          console.log('User not authenticated:', (_profileError$respons = profileError.response) === null || _profileError$respons === void 0 ? void 0 : (_profileError$respons2 = _profileError$respons.data) === null || _profileError$respons2 === void 0 ? void 0 : _profileError$respons2.error);\n        }\n        dispatch({\n          type: AUTH_ACTIONS.INIT_SUCCESS,\n          payload: {\n            authStatus,\n            user\n          }\n        });\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Failed to initialize auth:', error);\n        dispatch({\n          type: AUTH_ACTIONS.INIT_ERROR,\n          payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to initialize authentication'\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Login with Google\n  const loginWithGoogle = useCallback(async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      // Get the OAuth URL\n      const response = await authAPI.initiateGoogleLogin();\n      const {\n        auth_url\n      } = response.data;\n\n      // Redirect to Google OAuth\n      window.location.href = auth_url;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_ERROR,\n        payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed'\n      });\n    }\n  }, []);\n\n  // Handle OAuth callback (called when user returns from Google)\n  const handleOAuthCallback = useCallback(async (user, needsRoommateLink) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_SUCCESS,\n      payload: {\n        user,\n        needsRoommateLink\n      }\n    });\n  }, []);\n\n  // Link user to roommate\n  const linkRoommate = useCallback(async roommateId => {\n    dispatch({\n      type: AUTH_ACTIONS.LINK_ROOMMATE_START\n    });\n    try {\n      const response = await authAPI.linkRoommate(roommateId);\n      const user = response.data.user;\n      dispatch({\n        type: AUTH_ACTIONS.LINK_ROOMMATE_SUCCESS,\n        payload: {\n          user\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Failed to link roommate:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to link roommate';\n      dispatch({\n        type: AUTH_ACTIONS.LINK_ROOMMATE_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  }, []);\n\n  // Unlink roommate\n  const unlinkRoommate = useCallback(async () => {\n    try {\n      const response = await authAPI.unlinkRoommate();\n      const user = response.data.user;\n      dispatch({\n        type: AUTH_ACTIONS.REFRESH_USER,\n        payload: {\n          user\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Failed to unlink roommate:', error);\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to unlink roommate'\n      };\n    }\n  }, []);\n\n  // Refresh user session\n  const refreshUser = useCallback(async () => {\n    try {\n      const response = await authAPI.refreshSession();\n      const user = response.data.user;\n      dispatch({\n        type: AUTH_ACTIONS.REFRESH_USER,\n        payload: {\n          user\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Failed to refresh user:', error);\n      // If refresh fails, user might need to re-authenticate\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_SUCCESS\n      });\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Session expired'\n      };\n    }\n  }, []);\n\n  // Logout\n  const logout = useCallback(async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT_START\n    });\n    try {\n      await authAPI.logout();\n      clearTokens(); // Clear CSRF tokens\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_SUCCESS\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data, _error$response7, _error$response7$data;\n      console.error('Logout failed:', error);\n      clearTokens(); // Clear tokens even on error\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_ERROR,\n        payload: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Logout failed'\n      });\n      return {\n        success: false,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Logout failed'\n      };\n    }\n  }, []);\n\n  // Revoke access and logout\n  const revokeAccess = useCallback(async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT_START\n    });\n    try {\n      await authAPI.revokeAccess();\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_SUCCESS\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data, _error$response9, _error$response9$data;\n      console.error('Revoke access failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_ERROR,\n        payload: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || 'Failed to revoke access'\n      });\n      return {\n        success: false,\n        error: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.error) || 'Failed to revoke access'\n      };\n    }\n  }, []);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  }, []);\n\n  // Context value\n  const value = {\n    // State\n    ...state,\n    // Actions\n    loginWithGoogle,\n    handleOAuthCallback,\n    linkRoommate,\n    unlinkRoommate,\n    refreshUser,\n    logout,\n    revokeAccess,\n    clearError,\n    // Computed values\n    hasRoommate: state.user && state.user.roommate,\n    isConfigured: state.authStatus && state.authStatus.credentials_configured\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use auth context\n_s(AuthProvider, \"8awJ7kQQruPZXuhIzbjYHhxzSDY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// HOC to wrap components that require authentication\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function withAuth(Component) {\n  var _s3 = $RefreshSig$();\n  return _s3(function AuthenticatedComponent(props) {\n    _s3();\n    const {\n      isAuthenticated,\n      isLoading\n    } = useAuth();\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 14\n      }, this);\n    }\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Authentication required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 12\n    }, this);\n  }, \"yb/FJYAIXt7wZoU4a4YvGQ4Nlsc=\", false, function () {\n    return [useAuth];\n  });\n}\n\n// HOC to wrap components that require roommate linking\nexport function withRoommate(Component) {\n  var _s4 = $RefreshSig$();\n  return _s4(function RoommateLinkedComponent(props) {\n    _s4();\n    const {\n      isAuthenticated,\n      hasRoommate,\n      isLoading\n    } = useAuth();\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 14\n      }, this);\n    }\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Authentication required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 14\n      }, this);\n    }\n    if (!hasRoommate) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Roommate linking required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 12\n    }, this);\n  }, \"9H+ZUc2M7H31+rO9xoG75eIVNdA=\", false, function () {\n    return [useAuth];\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","authAPI","clearTokens","jsxDEV","_jsxDEV","AuthContext","AUTH_ACTIONS","INIT_START","INIT_SUCCESS","INIT_ERROR","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_ERROR","LINK_ROOMMATE_START","LINK_ROOMMATE_SUCCESS","LINK_ROOMMATE_ERROR","REFRESH_USER","CLEAR_ERROR","initialState","user","isAuthenticated","isLoading","isInitialized","needsRoommateLink","error","authStatus","authReducer","state","action","type","payload","roommate","AuthProvider","children","_s","dispatch","initializeAuth","statusResponse","getStatus","data","profileResponse","getProfile","profileError","_profileError$respons","_profileError$respons2","console","log","response","_error$response","_error$response$data","loginWithGoogle","initiateGoogleLogin","auth_url","window","location","href","_error$response2","_error$response2$data","handleOAuthCallback","linkRoommate","roommateId","success","_error$response3","_error$response3$data","errorMessage","unlinkRoommate","_error$response4","_error$response4$data","refreshUser","refreshSession","_error$response5","_error$response5$data","logout","_error$response6","_error$response6$data","_error$response7","_error$response7$data","revokeAccess","_error$response8","_error$response8$data","_error$response9","_error$response9$data","clearError","value","hasRoommate","isConfigured","credentials_configured","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","withAuth","Component","_s3","$RefreshSig$","AuthenticatedComponent","props","className","withRoommate","_s4","RoommateLinkedComponent","$RefreshReg$"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { authAPI, clearTokens } from '../services/api';\n\n// Create the Auth Context\nconst AuthContext = createContext();\n\n// Auth action types\nconst AUTH_ACTIONS = {\n  INIT_START: 'INIT_START',\n  INIT_SUCCESS: 'INIT_SUCCESS',\n  INIT_ERROR: 'INIT_ERROR',\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT_START: 'LOGOUT_START',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_ERROR: 'LOGOUT_ERROR',\n  LINK_ROOMMATE_START: 'LINK_ROOMMATE_START',\n  LINK_ROOMMATE_SUCCESS: 'LINK_ROOMMATE_SUCCESS',\n  LINK_ROOMMATE_ERROR: 'LINK_ROOMMATE_ERROR',\n  REFRESH_USER: 'REFRESH_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Initial auth state\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  isInitialized: false,\n  needsRoommateLink: false,\n  error: null,\n  authStatus: null\n};\n\n// Auth reducer\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case AUTH_ACTIONS.INIT_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.INIT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isInitialized: true,\n        authStatus: action.payload.authStatus,\n        user: action.payload.user,\n        isAuthenticated: !!action.payload.user,\n        needsRoommateLink: action.payload.user && !action.payload.user.roommate\n      };\n    \n    case AUTH_ACTIONS.INIT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isInitialized: true,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false\n      };\n    \n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        isAuthenticated: true,\n        needsRoommateLink: action.payload.needsRoommateLink || false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false\n      };\n    \n    case AUTH_ACTIONS.LOGOUT_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: null,\n        isAuthenticated: false,\n        needsRoommateLink: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGOUT_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    \n    case AUTH_ACTIONS.LINK_ROOMMATE_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LINK_ROOMMATE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        needsRoommateLink: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LINK_ROOMMATE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    \n    case AUTH_ACTIONS.REFRESH_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: !!action.payload.user,\n        needsRoommateLink: action.payload.user && !action.payload.user.roommate\n      };\n    \n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    \n    default:\n      return state;\n  }\n}\n\n// Auth Provider Component\nexport function AuthProvider({ children }) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Initialize authentication state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      dispatch({ type: AUTH_ACTIONS.INIT_START });\n      \n      try {\n        // Get auth service status\n        const statusResponse = await authAPI.getStatus();\n        const authStatus = statusResponse.data;\n        \n        // Try to get current user profile\n        let user = null;\n        try {\n          const profileResponse = await authAPI.getProfile();\n          user = profileResponse.data.user;\n        } catch (profileError) {\n          // User not authenticated, which is fine\n          console.log('User not authenticated:', profileError.response?.data?.error);\n        }\n        \n        dispatch({\n          type: AUTH_ACTIONS.INIT_SUCCESS,\n          payload: { authStatus, user }\n        });\n      } catch (error) {\n        console.error('Failed to initialize auth:', error);\n        dispatch({\n          type: AUTH_ACTIONS.INIT_ERROR,\n          payload: error.response?.data?.error || 'Failed to initialize authentication'\n        });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Login with Google\n  const loginWithGoogle = useCallback(async () => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n    \n    try {\n      // Get the OAuth URL\n      const response = await authAPI.initiateGoogleLogin();\n      const { auth_url } = response.data;\n      \n      // Redirect to Google OAuth\n      window.location.href = auth_url;\n      \n    } catch (error) {\n      console.error('Login failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_ERROR,\n        payload: error.response?.data?.error || 'Login failed'\n      });\n    }\n  }, []);\n\n  // Handle OAuth callback (called when user returns from Google)\n  const handleOAuthCallback = useCallback(async (user, needsRoommateLink) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_SUCCESS,\n      payload: { user, needsRoommateLink }\n    });\n  }, []);\n\n  // Link user to roommate\n  const linkRoommate = useCallback(async (roommateId) => {\n    dispatch({ type: AUTH_ACTIONS.LINK_ROOMMATE_START });\n    \n    try {\n      const response = await authAPI.linkRoommate(roommateId);\n      const user = response.data.user;\n      \n      dispatch({\n        type: AUTH_ACTIONS.LINK_ROOMMATE_SUCCESS,\n        payload: { user }\n      });\n      \n      return { success: true, user };\n    } catch (error) {\n      console.error('Failed to link roommate:', error);\n      const errorMessage = error.response?.data?.error || 'Failed to link roommate';\n      dispatch({\n        type: AUTH_ACTIONS.LINK_ROOMMATE_ERROR,\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  }, []);\n\n  // Unlink roommate\n  const unlinkRoommate = useCallback(async () => {\n    try {\n      const response = await authAPI.unlinkRoommate();\n      const user = response.data.user;\n      \n      dispatch({\n        type: AUTH_ACTIONS.REFRESH_USER,\n        payload: { user }\n      });\n      \n      return { success: true, user };\n    } catch (error) {\n      console.error('Failed to unlink roommate:', error);\n      return { success: false, error: error.response?.data?.error || 'Failed to unlink roommate' };\n    }\n  }, []);\n\n  // Refresh user session\n  const refreshUser = useCallback(async () => {\n    try {\n      const response = await authAPI.refreshSession();\n      const user = response.data.user;\n      \n      dispatch({\n        type: AUTH_ACTIONS.REFRESH_USER,\n        payload: { user }\n      });\n      \n      return { success: true, user };\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n      // If refresh fails, user might need to re-authenticate\n      dispatch({ type: AUTH_ACTIONS.LOGOUT_SUCCESS });\n      return { success: false, error: error.response?.data?.error || 'Session expired' };\n    }\n  }, []);\n\n  // Logout\n  const logout = useCallback(async () => {\n    dispatch({ type: AUTH_ACTIONS.LOGOUT_START });\n    \n    try {\n      await authAPI.logout();\n      clearTokens(); // Clear CSRF tokens\n      dispatch({ type: AUTH_ACTIONS.LOGOUT_SUCCESS });\n      return { success: true };\n    } catch (error) {\n      console.error('Logout failed:', error);\n      clearTokens(); // Clear tokens even on error\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_ERROR,\n        payload: error.response?.data?.error || 'Logout failed'\n      });\n      return { success: false, error: error.response?.data?.error || 'Logout failed' };\n    }\n  }, []);\n\n  // Revoke access and logout\n  const revokeAccess = useCallback(async () => {\n    dispatch({ type: AUTH_ACTIONS.LOGOUT_START });\n    \n    try {\n      await authAPI.revokeAccess();\n      dispatch({ type: AUTH_ACTIONS.LOGOUT_SUCCESS });\n      return { success: true };\n    } catch (error) {\n      console.error('Revoke access failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT_ERROR,\n        payload: error.response?.data?.error || 'Failed to revoke access'\n      });\n      return { success: false, error: error.response?.data?.error || 'Failed to revoke access' };\n    }\n  }, []);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  }, []);\n\n  // Context value\n  const value = {\n    // State\n    ...state,\n    \n    // Actions\n    loginWithGoogle,\n    handleOAuthCallback,\n    linkRoommate,\n    unlinkRoommate,\n    refreshUser,\n    logout,\n    revokeAccess,\n    clearError,\n    \n    // Computed values\n    hasRoommate: state.user && state.user.roommate,\n    isConfigured: state.authStatus && state.authStatus.credentials_configured\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n// Custom hook to use auth context\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// HOC to wrap components that require authentication\nexport function withAuth(Component) {\n  return function AuthenticatedComponent(props) {\n    const { isAuthenticated, isLoading } = useAuth();\n    \n    if (isLoading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n    \n    if (!isAuthenticated) {\n      return <div className=\"error\">Authentication required</div>;\n    }\n    \n    return <Component {...props} />;\n  };\n}\n\n// HOC to wrap components that require roommate linking\nexport function withRoommate(Component) {\n  return function RoommateLinkedComponent(props) {\n    const { isAuthenticated, hasRoommate, isLoading } = useAuth();\n    \n    if (isLoading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n    \n    if (!isAuthenticated) {\n      return <div className=\"error\">Authentication required</div>;\n    }\n    \n    if (!hasRoommate) {\n      return <div className=\"error\">Roommate linking required</div>;\n    }\n    \n    return <Component {...props} />;\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}