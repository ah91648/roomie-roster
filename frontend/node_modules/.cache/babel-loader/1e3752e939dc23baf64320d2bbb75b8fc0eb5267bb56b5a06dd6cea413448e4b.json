{"ast":null,"code":"import React,{useState,useEffect}from'react';import{assignmentAPI,stateAPI}from'../services/api';import SubChoreProgress from'./SubChoreProgress';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssignmentDisplay=()=>{const[assignments,setAssignments]=useState([]);const[groupedAssignments,setGroupedAssignments]=useState({});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[lastAssignmentDate,setLastAssignmentDate]=useState(null);const[isAssigning,setIsAssigning]=useState(false);useEffect(()=>{loadCurrentAssignments();loadAppState();},[]);const loadCurrentAssignments=async()=>{try{setLoading(true);setError(null);const response=await assignmentAPI.getCurrent();setAssignments(response.data.assignments||[]);setGroupedAssignments(response.data.grouped_by_roommate||{});}catch(err){var _err$response,_err$response$data;setError('Failed to load assignments: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message));}finally{setLoading(false);}};const loadAppState=async()=>{try{const response=await stateAPI.get();setLastAssignmentDate(response.data.last_run_date);}catch(err){console.error('Failed to load app state:',err);}};const assignChores=async()=>{setIsAssigning(true);try{setError(null);const response=await assignmentAPI.assignChores();setAssignments(response.data.assignments||[]);// Group assignments by roommate\nconst grouped={};response.data.assignments.forEach(assignment=>{const roommateName=assignment.roommate_name;if(!grouped[roommateName]){grouped[roommateName]=[];}grouped[roommateName].push(assignment);});setGroupedAssignments(grouped);setLastAssignmentDate(new Date().toISOString());}catch(err){var _err$response2,_err$response2$data;setError('Failed to assign chores: '+(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||err.message));}finally{setIsAssigning(false);}};const resetCycle=async()=>{if(!window.confirm('Are you sure you want to reset the assignment cycle? This will reset all roommate points to 0.')){return;}try{setError(null);await assignmentAPI.resetCycle();// Reload assignments after reset\nawait loadCurrentAssignments();}catch(err){var _err$response3,_err$response3$data;setError('Failed to reset cycle: '+(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||err.message));}};const formatDate=dateString=>{if(!dateString)return'Never';const date=new Date(dateString);return date.toLocaleDateString()+' at '+date.toLocaleTimeString();};const formatDueDate=dueDateString=>{const dueDate=new Date(dueDateString);const now=new Date();const diffTime=dueDate-now;const diffDays=Math.ceil(diffTime/(1000*60*60*24));if(diffDays<0){return`Overdue by ${Math.abs(diffDays)} day(s)`;}else if(diffDays===0){return'Due today';}else if(diffDays===1){return'Due tomorrow';}else{return`Due in ${diffDays} day(s)`;}};const getTypeIcon=type=>{return type==='predefined'?'🔄':'🎲';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading assignments...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chore Assignments\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:assignChores,disabled:isAssigning,className:\"button primary large\",children:isAssigning?'Assigning...':'Assign Chores'}),/*#__PURE__*/_jsx(\"button\",{onClick:resetCycle,className:\"button secondary\",children:\"Reset Cycle\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-info\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"last-assignment\",children:[\"Last Assignment: \",/*#__PURE__*/_jsx(\"strong\",{children:formatDate(lastAssignmentDate)})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"assignment-count\",children:[\"Current Assignments: \",/*#__PURE__*/_jsx(\"strong\",{children:assignments.length})]})]}),assignments.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No chores assigned yet\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click \\\"Assign Chores\\\" to generate assignments for your roommates.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Make sure you have both chores and roommates set up first!\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"assignments-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"assignments-by-roommate\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Assignments by Roommate\"}),Object.keys(groupedAssignments).map(roommateName=>/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-assignments\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"roommate-header\",children:[roommateName,\"'s Chores\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"chore-assignments\",children:groupedAssignments[roommateName].map((assignment,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"chore-name\",children:assignment.chore_name}),/*#__PURE__*/_jsx(\"span\",{className:\"type-icon\",title:assignment.type,children:getTypeIcon(assignment.type)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Frequency:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:assignment.frequency})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Points:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:assignment.points})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Due:\"}),/*#__PURE__*/_jsx(\"span\",{className:`value due-date ${formatDueDate(assignment.due_date).includes('Overdue')?'overdue':''}`,children:formatDueDate(assignment.due_date)})]})]}),/*#__PURE__*/_jsx(SubChoreProgress,{chore:{id:assignment.chore_id,name:assignment.chore_name},assignment:assignment,assignmentIndex:assignments.findIndex(a=>a.chore_id===assignment.chore_id&&a.roommate_id===assignment.roommate_id),onProgressUpdate:progress=>{// Handle progress updates if needed for UI feedback\nconsole.log(`Progress for ${assignment.chore_name}:`,progress);}})]},index))})]},roommateName))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-summary\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Assignment Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-stats\",children:Object.keys(groupedAssignments).map(roommateName=>{const roommateAssignments=groupedAssignments[roommateName];const totalPoints=roommateAssignments.reduce((sum,assignment)=>sum+assignment.points,0);return/*#__PURE__*/_jsxs(\"div\",{className:\"roommate-summary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"roommate-name\",children:roommateName}),/*#__PURE__*/_jsxs(\"span\",{className:\"chore-count\",children:[roommateAssignments.length,\" chore(s)\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-points\",children:[totalPoints,\" points\"]})]},roommateName);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How Assignments Work\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"instruction-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"instruction-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Predefined Chores\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Rotate between roommates in order\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instruction-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\uD83C\\uDFB2\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Random Chores\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Assigned using weighted selection based on current cycle points\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instruction-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\u2696\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fair Distribution\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Points help ensure balanced workload across all roommates\"})]})]})]})]})]});};export default AssignmentDisplay;","map":{"version":3,"names":["React","useState","useEffect","assignmentAPI","stateAPI","SubChoreProgress","jsx","_jsx","jsxs","_jsxs","AssignmentDisplay","assignments","setAssignments","groupedAssignments","setGroupedAssignments","loading","setLoading","error","setError","lastAssignmentDate","setLastAssignmentDate","isAssigning","setIsAssigning","loadCurrentAssignments","loadAppState","response","getCurrent","data","grouped_by_roommate","err","_err$response","_err$response$data","message","get","last_run_date","console","assignChores","grouped","forEach","assignment","roommateName","roommate_name","push","Date","toISOString","_err$response2","_err$response2$data","resetCycle","window","confirm","_err$response3","_err$response3$data","formatDate","dateString","date","toLocaleDateString","toLocaleTimeString","formatDueDate","dueDateString","dueDate","now","diffTime","diffDays","Math","ceil","abs","getTypeIcon","type","className","children","onClick","disabled","length","Object","keys","map","index","chore_name","title","frequency","points","due_date","includes","chore","id","chore_id","name","assignmentIndex","findIndex","a","roommate_id","onProgressUpdate","progress","log","roommateAssignments","totalPoints","reduce","sum"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/components/AssignmentDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { assignmentAPI, stateAPI } from '../services/api';\nimport SubChoreProgress from './SubChoreProgress';\n\nconst AssignmentDisplay = () => {\n  const [assignments, setAssignments] = useState([]);\n  const [groupedAssignments, setGroupedAssignments] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastAssignmentDate, setLastAssignmentDate] = useState(null);\n  const [isAssigning, setIsAssigning] = useState(false);\n\n  useEffect(() => {\n    loadCurrentAssignments();\n    loadAppState();\n  }, []);\n\n  const loadCurrentAssignments = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await assignmentAPI.getCurrent();\n      setAssignments(response.data.assignments || []);\n      setGroupedAssignments(response.data.grouped_by_roommate || {});\n    } catch (err) {\n      setError('Failed to load assignments: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAppState = async () => {\n    try {\n      const response = await stateAPI.get();\n      setLastAssignmentDate(response.data.last_run_date);\n    } catch (err) {\n      console.error('Failed to load app state:', err);\n    }\n  };\n\n  const assignChores = async () => {\n    setIsAssigning(true);\n    try {\n      setError(null);\n      const response = await assignmentAPI.assignChores();\n      setAssignments(response.data.assignments || []);\n      \n      // Group assignments by roommate\n      const grouped = {};\n      response.data.assignments.forEach(assignment => {\n        const roommateName = assignment.roommate_name;\n        if (!grouped[roommateName]) {\n          grouped[roommateName] = [];\n        }\n        grouped[roommateName].push(assignment);\n      });\n      setGroupedAssignments(grouped);\n      setLastAssignmentDate(new Date().toISOString());\n      \n    } catch (err) {\n      setError('Failed to assign chores: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setIsAssigning(false);\n    }\n  };\n\n  const resetCycle = async () => {\n    if (!window.confirm('Are you sure you want to reset the assignment cycle? This will reset all roommate points to 0.')) {\n      return;\n    }\n\n    try {\n      setError(null);\n      await assignmentAPI.resetCycle();\n      // Reload assignments after reset\n      await loadCurrentAssignments();\n    } catch (err) {\n      setError('Failed to reset cycle: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Never';\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString();\n  };\n\n  const formatDueDate = (dueDateString) => {\n    const dueDate = new Date(dueDateString);\n    const now = new Date();\n    const diffTime = dueDate - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) {\n      return `Overdue by ${Math.abs(diffDays)} day(s)`;\n    } else if (diffDays === 0) {\n      return 'Due today';\n    } else if (diffDays === 1) {\n      return 'Due tomorrow';\n    } else {\n      return `Due in ${diffDays} day(s)`;\n    }\n  };\n\n  const getTypeIcon = (type) => {\n    return type === 'predefined' ? '🔄' : '🎲';\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading assignments...</div>;\n  }\n\n  return (\n    <div className=\"assignment-display\">\n      <div className=\"header\">\n        <h2>Chore Assignments</h2>\n        <div className=\"header-actions\">\n          <button\n            onClick={assignChores}\n            disabled={isAssigning}\n            className=\"button primary large\"\n          >\n            {isAssigning ? 'Assigning...' : 'Assign Chores'}\n          </button>\n          <button\n            onClick={resetCycle}\n            className=\"button secondary\"\n          >\n            Reset Cycle\n          </button>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      <div className=\"assignment-info\">\n        <p className=\"last-assignment\">\n          Last Assignment: <strong>{formatDate(lastAssignmentDate)}</strong>\n        </p>\n        <p className=\"assignment-count\">\n          Current Assignments: <strong>{assignments.length}</strong>\n        </p>\n      </div>\n\n      {assignments.length === 0 ? (\n        <div className=\"empty-state\">\n          <h3>No chores assigned yet</h3>\n          <p>Click \"Assign Chores\" to generate assignments for your roommates.</p>\n          <p>Make sure you have both chores and roommates set up first!</p>\n        </div>\n      ) : (\n        <div className=\"assignments-container\">\n          {/* Grouped by Roommate View */}\n          <div className=\"assignments-by-roommate\">\n            <h3>Assignments by Roommate</h3>\n            {Object.keys(groupedAssignments).map(roommateName => (\n              <div key={roommateName} className=\"roommate-assignments\">\n                <h4 className=\"roommate-header\">{roommateName}'s Chores</h4>\n                <div className=\"chore-assignments\">\n                  {groupedAssignments[roommateName].map((assignment, index) => (\n                    <div key={index} className=\"assignment-card\">\n                      <div className=\"assignment-header\">\n                        <span className=\"chore-name\">{assignment.chore_name}</span>\n                        <span className=\"type-icon\" title={assignment.type}>\n                          {getTypeIcon(assignment.type)}\n                        </span>\n                      </div>\n                      <div className=\"assignment-details\">\n                        <div className=\"detail\">\n                          <span className=\"label\">Frequency:</span>\n                          <span className=\"value\">{assignment.frequency}</span>\n                        </div>\n                        <div className=\"detail\">\n                          <span className=\"label\">Points:</span>\n                          <span className=\"value\">{assignment.points}</span>\n                        </div>\n                        <div className=\"detail\">\n                          <span className=\"label\">Due:</span>\n                          <span className={`value due-date ${formatDueDate(assignment.due_date).includes('Overdue') ? 'overdue' : ''}`}>\n                            {formatDueDate(assignment.due_date)}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      {/* Sub-chore progress */}\n                      <SubChoreProgress \n                        chore={{\n                          id: assignment.chore_id,\n                          name: assignment.chore_name\n                        }}\n                        assignment={assignment}\n                        assignmentIndex={assignments.findIndex(a => \n                          a.chore_id === assignment.chore_id && \n                          a.roommate_id === assignment.roommate_id\n                        )}\n                        onProgressUpdate={(progress) => {\n                          // Handle progress updates if needed for UI feedback\n                          console.log(`Progress for ${assignment.chore_name}:`, progress);\n                        }}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"assignment-summary\">\n            <h3>Assignment Summary</h3>\n            <div className=\"summary-stats\">\n              {Object.keys(groupedAssignments).map(roommateName => {\n                const roommateAssignments = groupedAssignments[roommateName];\n                const totalPoints = roommateAssignments.reduce((sum, assignment) => sum + assignment.points, 0);\n                \n                return (\n                  <div key={roommateName} className=\"roommate-summary\">\n                    <span className=\"roommate-name\">{roommateName}</span>\n                    <span className=\"chore-count\">{roommateAssignments.length} chore(s)</span>\n                    <span className=\"total-points\">{totalPoints} points</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Assignment Instructions */}\n      <div className=\"instructions\">\n        <h3>How Assignments Work</h3>\n        <div className=\"instruction-grid\">\n          <div className=\"instruction-item\">\n            <span className=\"icon\">🔄</span>\n            <div>\n              <strong>Predefined Chores</strong>\n              <p>Rotate between roommates in order</p>\n            </div>\n          </div>\n          <div className=\"instruction-item\">\n            <span className=\"icon\">🎲</span>\n            <div>\n              <strong>Random Chores</strong>\n              <p>Assigned using weighted selection based on current cycle points</p>\n            </div>\n          </div>\n          <div className=\"instruction-item\">\n            <span className=\"icon\">⚖️</span>\n            <div>\n              <strong>Fair Distribution</strong>\n              <p>Points help ensure balanced workload across all roommates</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssignmentDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}