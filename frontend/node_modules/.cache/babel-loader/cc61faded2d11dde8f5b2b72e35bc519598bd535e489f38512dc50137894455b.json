{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/components/AssignmentDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { assignmentAPI, stateAPI } from '../services/api';\nimport SubChoreProgress from './SubChoreProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentDisplay = () => {\n  _s();\n  const [assignments, setAssignments] = useState([]);\n  const [groupedAssignments, setGroupedAssignments] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastAssignmentDate, setLastAssignmentDate] = useState(null);\n  const [isAssigning, setIsAssigning] = useState(false);\n  useEffect(() => {\n    loadCurrentAssignments();\n    loadAppState();\n  }, []);\n  const loadCurrentAssignments = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await assignmentAPI.getCurrent();\n      setAssignments(response.data.assignments || []);\n      setGroupedAssignments(response.data.grouped_by_roommate || {});\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to load assignments: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadAppState = async () => {\n    try {\n      const response = await stateAPI.get();\n      setLastAssignmentDate(response.data.last_run_date);\n    } catch (err) {\n      console.error('Failed to load app state:', err);\n    }\n  };\n  const assignChores = async () => {\n    setIsAssigning(true);\n    try {\n      setError(null);\n      const response = await assignmentAPI.assignChores();\n      setAssignments(response.data.assignments || []);\n\n      // Group assignments by roommate\n      const grouped = {};\n      response.data.assignments.forEach(assignment => {\n        const roommateName = assignment.roommate_name;\n        if (!grouped[roommateName]) {\n          grouped[roommateName] = [];\n        }\n        grouped[roommateName].push(assignment);\n      });\n      setGroupedAssignments(grouped);\n      setLastAssignmentDate(new Date().toISOString());\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to assign chores: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    } finally {\n      setIsAssigning(false);\n    }\n  };\n  const resetCycle = async () => {\n    if (!window.confirm('Are you sure you want to reset the assignment cycle? This will reset all roommate points to 0.')) {\n      return;\n    }\n    try {\n      setError(null);\n      await assignmentAPI.resetCycle();\n      // Reload assignments after reset\n      await loadCurrentAssignments();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError('Failed to reset cycle: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message));\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Never';\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString();\n  };\n  const formatDueDate = dueDateString => {\n    const dueDate = new Date(dueDateString);\n    const now = new Date();\n    const diffTime = dueDate - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 0) {\n      return `Overdue by ${Math.abs(diffDays)} day(s)`;\n    } else if (diffDays === 0) {\n      return 'Due today';\n    } else if (diffDays === 1) {\n      return 'Due tomorrow';\n    } else {\n      return `Due in ${diffDays} day(s)`;\n    }\n  };\n  const getTypeIcon = type => {\n    return type === 'predefined' ? '🔄' : '🎲';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading assignments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignment-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chore Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: assignChores,\n          disabled: isAssigning,\n          className: \"button primary large\",\n          children: isAssigning ? 'Assigning...' : 'Assign Chores'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetCycle,\n          className: \"button secondary\",\n          children: \"Reset Cycle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignment-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last-assignment\",\n        children: [\"Last Assignment: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatDate(lastAssignmentDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"assignment-count\",\n        children: [\"Current Assignments: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: assignments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), assignments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No chores assigned yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click \\\"Assign Chores\\\" to generate assignments for your roommates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Make sure you have both chores and roommates set up first!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignments-by-roommate\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assignments by Roommate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), Object.keys(groupedAssignments).map(roommateName => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roommate-assignments\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"roommate-header\",\n            children: [roommateName, \"'s Chores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chore-assignments\",\n            children: groupedAssignments[roommateName].map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assignment-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chore-name\",\n                  children: assignment.chore_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"type-icon\",\n                  title: assignment.type,\n                  children: getTypeIcon(assignment.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignment-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: \"Frequency:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"value\",\n                    children: assignment.frequency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: \"Points:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"value\",\n                    children: assignment.points\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: \"Due:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `value due-date ${formatDueDate(assignment.due_date).includes('Overdue') ? 'overdue' : ''}`,\n                    children: formatDueDate(assignment.due_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(SubChoreProgress, {\n                chore: {\n                  id: assignment.chore_id,\n                  name: assignment.chore_name\n                },\n                assignment: assignment,\n                assignmentIndex: assignments.findIndex(a => a.chore_id === assignment.chore_id && a.roommate_id === assignment.roommate_id),\n                onProgressUpdate: progress => {\n                  // Handle progress updates if needed for UI feedback\n                  console.log(`Progress for ${assignment.chore_name}:`, progress);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, roommateName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assignment Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: Object.keys(groupedAssignments).map(roommateName => {\n            const roommateAssignments = groupedAssignments[roommateName];\n            const totalPoints = roommateAssignments.reduce((sum, assignment) => sum + assignment.points, 0);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roommate-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"roommate-name\",\n                children: roommateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chore-count\",\n                children: [roommateAssignments.length, \" chore(s)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"total-points\",\n                children: [totalPoints, \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, roommateName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How Assignments Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instruction-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instruction-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Predefined Chores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rotate between roommates in order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instruction-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83C\\uDFB2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Random Chores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Assigned using weighted selection based on current cycle points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instruction-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\u2696\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fair Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Points help ensure balanced workload across all roommates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentDisplay, \"0YgvB5jo6B9KMhb9btoXH2FbY/4=\");\n_c = AssignmentDisplay;\nexport default AssignmentDisplay;\nvar _c;\n$RefreshReg$(_c, \"AssignmentDisplay\");","map":{"version":3,"names":["React","useState","useEffect","assignmentAPI","stateAPI","SubChoreProgress","jsxDEV","_jsxDEV","AssignmentDisplay","_s","assignments","setAssignments","groupedAssignments","setGroupedAssignments","loading","setLoading","error","setError","lastAssignmentDate","setLastAssignmentDate","isAssigning","setIsAssigning","loadCurrentAssignments","loadAppState","response","getCurrent","data","grouped_by_roommate","err","_err$response","_err$response$data","message","get","last_run_date","console","assignChores","grouped","forEach","assignment","roommateName","roommate_name","push","Date","toISOString","_err$response2","_err$response2$data","resetCycle","window","confirm","_err$response3","_err$response3$data","formatDate","dateString","date","toLocaleDateString","toLocaleTimeString","formatDueDate","dueDateString","dueDate","now","diffTime","diffDays","Math","ceil","abs","getTypeIcon","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","Object","keys","map","index","chore_name","title","frequency","points","due_date","includes","chore","id","chore_id","name","assignmentIndex","findIndex","a","roommate_id","onProgressUpdate","progress","log","roommateAssignments","totalPoints","reduce","sum","_c","$RefreshReg$"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/frontend/src/components/AssignmentDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { assignmentAPI, stateAPI } from '../services/api';\nimport SubChoreProgress from './SubChoreProgress';\n\nconst AssignmentDisplay = () => {\n  const [assignments, setAssignments] = useState([]);\n  const [groupedAssignments, setGroupedAssignments] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastAssignmentDate, setLastAssignmentDate] = useState(null);\n  const [isAssigning, setIsAssigning] = useState(false);\n\n  useEffect(() => {\n    loadCurrentAssignments();\n    loadAppState();\n  }, []);\n\n  const loadCurrentAssignments = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await assignmentAPI.getCurrent();\n      setAssignments(response.data.assignments || []);\n      setGroupedAssignments(response.data.grouped_by_roommate || {});\n    } catch (err) {\n      setError('Failed to load assignments: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAppState = async () => {\n    try {\n      const response = await stateAPI.get();\n      setLastAssignmentDate(response.data.last_run_date);\n    } catch (err) {\n      console.error('Failed to load app state:', err);\n    }\n  };\n\n  const assignChores = async () => {\n    setIsAssigning(true);\n    try {\n      setError(null);\n      const response = await assignmentAPI.assignChores();\n      setAssignments(response.data.assignments || []);\n      \n      // Group assignments by roommate\n      const grouped = {};\n      response.data.assignments.forEach(assignment => {\n        const roommateName = assignment.roommate_name;\n        if (!grouped[roommateName]) {\n          grouped[roommateName] = [];\n        }\n        grouped[roommateName].push(assignment);\n      });\n      setGroupedAssignments(grouped);\n      setLastAssignmentDate(new Date().toISOString());\n      \n    } catch (err) {\n      setError('Failed to assign chores: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setIsAssigning(false);\n    }\n  };\n\n  const resetCycle = async () => {\n    if (!window.confirm('Are you sure you want to reset the assignment cycle? This will reset all roommate points to 0.')) {\n      return;\n    }\n\n    try {\n      setError(null);\n      await assignmentAPI.resetCycle();\n      // Reload assignments after reset\n      await loadCurrentAssignments();\n    } catch (err) {\n      setError('Failed to reset cycle: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Never';\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString();\n  };\n\n  const formatDueDate = (dueDateString) => {\n    const dueDate = new Date(dueDateString);\n    const now = new Date();\n    const diffTime = dueDate - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) {\n      return `Overdue by ${Math.abs(diffDays)} day(s)`;\n    } else if (diffDays === 0) {\n      return 'Due today';\n    } else if (diffDays === 1) {\n      return 'Due tomorrow';\n    } else {\n      return `Due in ${diffDays} day(s)`;\n    }\n  };\n\n  const getTypeIcon = (type) => {\n    return type === 'predefined' ? '🔄' : '🎲';\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading assignments...</div>;\n  }\n\n  return (\n    <div className=\"assignment-display\">\n      <div className=\"header\">\n        <h2>Chore Assignments</h2>\n        <div className=\"header-actions\">\n          <button\n            onClick={assignChores}\n            disabled={isAssigning}\n            className=\"button primary large\"\n          >\n            {isAssigning ? 'Assigning...' : 'Assign Chores'}\n          </button>\n          <button\n            onClick={resetCycle}\n            className=\"button secondary\"\n          >\n            Reset Cycle\n          </button>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      <div className=\"assignment-info\">\n        <p className=\"last-assignment\">\n          Last Assignment: <strong>{formatDate(lastAssignmentDate)}</strong>\n        </p>\n        <p className=\"assignment-count\">\n          Current Assignments: <strong>{assignments.length}</strong>\n        </p>\n      </div>\n\n      {assignments.length === 0 ? (\n        <div className=\"empty-state\">\n          <h3>No chores assigned yet</h3>\n          <p>Click \"Assign Chores\" to generate assignments for your roommates.</p>\n          <p>Make sure you have both chores and roommates set up first!</p>\n        </div>\n      ) : (\n        <div className=\"assignments-container\">\n          {/* Grouped by Roommate View */}\n          <div className=\"assignments-by-roommate\">\n            <h3>Assignments by Roommate</h3>\n            {Object.keys(groupedAssignments).map(roommateName => (\n              <div key={roommateName} className=\"roommate-assignments\">\n                <h4 className=\"roommate-header\">{roommateName}'s Chores</h4>\n                <div className=\"chore-assignments\">\n                  {groupedAssignments[roommateName].map((assignment, index) => (\n                    <div key={index} className=\"assignment-card\">\n                      <div className=\"assignment-header\">\n                        <span className=\"chore-name\">{assignment.chore_name}</span>\n                        <span className=\"type-icon\" title={assignment.type}>\n                          {getTypeIcon(assignment.type)}\n                        </span>\n                      </div>\n                      <div className=\"assignment-details\">\n                        <div className=\"detail\">\n                          <span className=\"label\">Frequency:</span>\n                          <span className=\"value\">{assignment.frequency}</span>\n                        </div>\n                        <div className=\"detail\">\n                          <span className=\"label\">Points:</span>\n                          <span className=\"value\">{assignment.points}</span>\n                        </div>\n                        <div className=\"detail\">\n                          <span className=\"label\">Due:</span>\n                          <span className={`value due-date ${formatDueDate(assignment.due_date).includes('Overdue') ? 'overdue' : ''}`}>\n                            {formatDueDate(assignment.due_date)}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      {/* Sub-chore progress */}\n                      <SubChoreProgress \n                        chore={{\n                          id: assignment.chore_id,\n                          name: assignment.chore_name\n                        }}\n                        assignment={assignment}\n                        assignmentIndex={assignments.findIndex(a => \n                          a.chore_id === assignment.chore_id && \n                          a.roommate_id === assignment.roommate_id\n                        )}\n                        onProgressUpdate={(progress) => {\n                          // Handle progress updates if needed for UI feedback\n                          console.log(`Progress for ${assignment.chore_name}:`, progress);\n                        }}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"assignment-summary\">\n            <h3>Assignment Summary</h3>\n            <div className=\"summary-stats\">\n              {Object.keys(groupedAssignments).map(roommateName => {\n                const roommateAssignments = groupedAssignments[roommateName];\n                const totalPoints = roommateAssignments.reduce((sum, assignment) => sum + assignment.points, 0);\n                \n                return (\n                  <div key={roommateName} className=\"roommate-summary\">\n                    <span className=\"roommate-name\">{roommateName}</span>\n                    <span className=\"chore-count\">{roommateAssignments.length} chore(s)</span>\n                    <span className=\"total-points\">{totalPoints} points</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Assignment Instructions */}\n      <div className=\"instructions\">\n        <h3>How Assignments Work</h3>\n        <div className=\"instruction-grid\">\n          <div className=\"instruction-item\">\n            <span className=\"icon\">🔄</span>\n            <div>\n              <strong>Predefined Chores</strong>\n              <p>Rotate between roommates in order</p>\n            </div>\n          </div>\n          <div className=\"instruction-item\">\n            <span className=\"icon\">🎲</span>\n            <div>\n              <strong>Random Chores</strong>\n              <p>Assigned using weighted selection based on current cycle points</p>\n            </div>\n          </div>\n          <div className=\"instruction-item\">\n            <span className=\"icon\">⚖️</span>\n            <div>\n              <strong>Fair Distribution</strong>\n              <p>Points help ensure balanced workload across all roommates</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssignmentDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}