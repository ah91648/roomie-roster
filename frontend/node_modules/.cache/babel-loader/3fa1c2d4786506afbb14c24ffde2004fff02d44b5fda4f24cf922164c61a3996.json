{"ast":null,"code":"import React,{useState,useEffect}from'react';import{shoppingListAPI,roommateAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ShoppingListManager=()=>{const[items,setItems]=useState([]);const[roommates,setRoommates]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[showAddForm,setShowAddForm]=useState(false);const[editingItem,setEditingItem]=useState(null);const[showHistory,setShowHistory]=useState(false);const[purchaseHistory,setPurchaseHistory]=useState([]);const[filter,setFilter]=useState('active');// active, purchased, all\n// Real-time update state\nconst[lastModified,setLastModified]=useState(null);const[isPolling,setIsPolling]=useState(true);const[updateAvailable,setUpdateAvailable]=useState(false);// Form state\nconst[formData,setFormData]=useState({item_name:'',estimated_price:'',brand_preference:'',notes:'',added_by:'',added_by_name:''});// Purchase form state\nconst[purchaseData,setPurchaseData]=useState({purchased_by:'',purchased_by_name:'',actual_price:'',notes:''});useEffect(()=>{loadShoppingList();loadRoommates();checkForUpdates();// Initial metadata check\n},[filter]);// Polling effect for real-time updates\nuseEffect(()=>{if(!isPolling)return;const pollInterval=setInterval(()=>{checkForUpdates();},5000);// Check every 5 seconds\nreturn()=>clearInterval(pollInterval);},[isPolling,lastModified]);// Clean up polling when component unmounts\nuseEffect(()=>{return()=>setIsPolling(false);},[]);const loadShoppingList=async()=>{try{setLoading(true);setError(null);const statusFilter=filter==='all'?null:filter;const response=await shoppingListAPI.getAll(statusFilter);setItems(response.data.items||[]);}catch(err){var _err$response,_err$response$data;setError('Failed to load shopping list: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message));}finally{setLoading(false);}};const loadRoommates=async()=>{try{const response=await roommateAPI.getAll();setRoommates(response.data);}catch(err){console.error('Failed to load roommates:',err);}};const loadPurchaseHistory=async()=>{try{const response=await shoppingListAPI.getHistory(30);setPurchaseHistory(response.data.history||[]);}catch(err){var _err$response2,_err$response2$data;setError('Failed to load purchase history: '+(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||err.message));}};const checkForUpdates=async()=>{try{const response=await shoppingListAPI.getMetadata();const newLastModified=response.data.last_modified;if(lastModified&&newLastModified!==lastModified){setUpdateAvailable(true);}else if(!lastModified){// First time loading, set the timestamp without showing update notification\nsetLastModified(newLastModified);}}catch(err){console.error('Failed to check for updates:',err);// Don't show error to user for polling failures\n}};const refreshData=async()=>{setUpdateAvailable(false);await loadShoppingList();const response=await shoppingListAPI.getMetadata();setLastModified(response.data.last_modified);};const resetForm=()=>{setFormData({item_name:'',estimated_price:'',brand_preference:'',notes:'',added_by:'',added_by_name:''});setEditingItem(null);setShowAddForm(false);};const resetPurchaseForm=()=>{setPurchaseData({purchased_by:'',purchased_by_name:'',actual_price:'',notes:''});};const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));};const handlePurchaseChange=e=>{const{name,value}=e.target;setPurchaseData(prev=>({...prev,[name]:value}));};const handleRoommateSelect=(field,roommateId)=>{const roommate=roommates.find(r=>r.id===parseInt(roommateId));if(field==='added_by'){setFormData(prev=>({...prev,added_by:roommate?roommate.id:'',added_by_name:roommate?roommate.name:''}));}else if(field==='purchased_by'){setPurchaseData(prev=>({...prev,purchased_by:roommate?roommate.id:'',purchased_by_name:roommate?roommate.name:''}));}};const handleSubmit=async e=>{e.preventDefault();if(!formData.item_name.trim()||!formData.added_by)return;try{setError(null);const itemData={...formData,estimated_price:formData.estimated_price?parseFloat(formData.estimated_price):null};if(editingItem){// Update existing item\nconst response=await shoppingListAPI.update(editingItem.id,itemData);setItems(items.map(item=>item.id===editingItem.id?response.data:item));}else{// Add new item\nconst response=await shoppingListAPI.create(itemData);setItems([...items,response.data]);}// Update lastModified timestamp after successful mutation\nconst metadataResponse=await shoppingListAPI.getMetadata();setLastModified(metadataResponse.data.last_modified);resetForm();}catch(err){var _err$response3,_err$response3$data;setError('Failed to save item: '+(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||err.message));}};const deleteItem=async id=>{if(!window.confirm('Are you sure you want to delete this item?'))return;try{setError(null);await shoppingListAPI.delete(id);setItems(items.filter(item=>item.id!==id));// Update lastModified timestamp after successful mutation\nconst metadataResponse=await shoppingListAPI.getMetadata();setLastModified(metadataResponse.data.last_modified);}catch(err){var _err$response4,_err$response4$data;setError('Failed to delete item: '+(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.error)||err.message));}};const startEditing=item=>{setFormData({item_name:item.item_name,estimated_price:item.estimated_price||'',brand_preference:item.brand_preference||'',notes:item.notes||'',added_by:item.added_by,added_by_name:item.added_by_name});setEditingItem(item);setShowAddForm(true);};const markPurchased=async item=>{if(!purchaseData.purchased_by){setError('Please select who purchased the item');return;}try{setError(null);const purchasePayload={...purchaseData,actual_price:purchaseData.actual_price?parseFloat(purchaseData.actual_price):null};const response=await shoppingListAPI.markPurchased(item.id,purchasePayload);setItems(items.map(i=>i.id===item.id?response.data.item:i));// Update lastModified timestamp after successful mutation\nconst metadataResponse=await shoppingListAPI.getMetadata();setLastModified(metadataResponse.data.last_modified);resetPurchaseForm();}catch(err){var _err$response5,_err$response5$data;setError('Failed to mark item as purchased: '+(((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.error)||err.message));}};const formatPrice=price=>{return price?`$${price.toFixed(2)}`:'Not specified';};const formatDate=dateString=>{if(!dateString)return'N/A';return new Date(dateString).toLocaleDateString();};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading shopping list...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"shopping-list-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAddForm(!showAddForm),className:\"button primary\",children:showAddForm?'Cancel':'Add Item'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowHistory(!showHistory);if(!showHistory)loadPurchaseHistory();},className:\"button secondary\",children:showHistory?'Hide History':'Purchase History'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsPolling(!isPolling),className:`button ${isPolling?'success':'secondary'}`,title:isPolling?'Real-time updates enabled':'Real-time updates disabled',children:isPolling?'🔄 Live':'⏸️ Paused'})]})]}),updateAvailable&&/*#__PURE__*/_jsx(\"div\",{className:\"update-notification\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"update-content\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDD04 New changes available from other users!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshData,className:\"button small primary\",children:\"Refresh Now\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setUpdateAvailable(false),className:\"button small secondary\",children:\"Dismiss\"})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setFilter('active'),className:`filter-btn ${filter==='active'?'active':''}`,children:[\"Active Items (\",items.filter(i=>i.status==='active').length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setFilter('purchased'),className:`filter-btn ${filter==='purchased'?'active':''}`,children:[\"Purchased (\",items.filter(i=>i.status==='purchased').length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('all'),className:`filter-btn ${filter==='all'?'active':''}`,children:\"All Items\"})]}),showAddForm&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"shopping-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:editingItem?'Edit Item':'Add New Item'}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"item_name\",children:\"Item Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"item_name\",name:\"item_name\",value:formData.item_name,onChange:handleInputChange,placeholder:\"e.g., Paper Towels\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"added_by\",children:\"Added By *\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"added_by\",value:formData.added_by,onChange:e=>handleRoommateSelect('added_by',e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select roommate...\"}),roommates.map(roommate=>/*#__PURE__*/_jsx(\"option\",{value:roommate.id,children:roommate.name},roommate.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"estimated_price\",children:\"Estimated Price\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"estimated_price\",name:\"estimated_price\",value:formData.estimated_price,onChange:handleInputChange,step:\"0.01\",min:\"0\",placeholder:\"0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"brand_preference\",children:\"Brand Preference\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"brand_preference\",name:\"brand_preference\",value:formData.brand_preference,onChange:handleInputChange,placeholder:\"e.g., Bounty\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",name:\"notes\",value:formData.notes,onChange:handleInputChange,placeholder:\"Any additional notes...\",rows:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button primary\",children:editingItem?'Update Item':'Add Item'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:resetForm,className:\"button secondary\",children:\"Cancel\"})]})]}),showHistory&&/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-history\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Purchases (Last 30 Days)\"}),purchaseHistory.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No purchases in the last 30 days.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"history-list\",children:purchaseHistory.map(item=>/*#__PURE__*/_jsx(\"div\",{className:\"history-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"history-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.item_name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Purchased by: \",/*#__PURE__*/_jsx(\"strong\",{children:item.purchased_by_name})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",formatDate(item.purchase_date)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Price: \",formatPrice(item.actual_price)]}),item.brand_preference&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Brand: \",item.brand_preference]})]})},item.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"shopping-list\",children:items.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"empty-state\",children:filter==='active'?'No active items in the shopping list.':filter==='purchased'?'No purchased items found.':'No items in the shopping list. Add your first item above!'}):/*#__PURE__*/_jsx(\"div\",{className:\"shopping-items\",children:items.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:`shopping-item ${item.status}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"item-name\",children:item.item_name}),/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${item.status}`,children:item.status==='active'?'Need to Buy':'Purchased'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Estimated Price:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatPrice(item.estimated_price)})]}),item.actual_price&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Actual Price:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatPrice(item.actual_price)})]}),item.brand_preference&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Brand:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:item.brand_preference})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Added by:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:item.added_by_name})]}),item.purchased_by_name&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Purchased by:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:item.purchased_by_name})]}),item.notes&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item notes\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Notes:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:item.notes})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:item.status==='active'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Mark as Purchased\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-form\",children:[/*#__PURE__*/_jsxs(\"select\",{value:purchaseData.purchased_by,onChange:e=>handleRoommateSelect('purchased_by',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Who bought this?\"}),roommates.map(roommate=>/*#__PURE__*/_jsx(\"option\",{value:roommate.id,children:roommate.name},roommate.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Actual price\",step:\"0.01\",min:\"0\",value:purchaseData.actual_price,onChange:handlePurchaseChange,name:\"actual_price\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>markPurchased(item),className:\"button small primary\",children:\"Mark Purchased\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>startEditing(item),className:\"button small secondary\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteItem(item.id),className:\"button small danger\",children:\"Delete\"})]})]})})]},item.id))})})]});};export default ShoppingListManager;","map":{"version":3,"names":["React","useState","useEffect","shoppingListAPI","roommateAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ShoppingListManager","items","setItems","roommates","setRoommates","loading","setLoading","error","setError","showAddForm","setShowAddForm","editingItem","setEditingItem","showHistory","setShowHistory","purchaseHistory","setPurchaseHistory","filter","setFilter","lastModified","setLastModified","isPolling","setIsPolling","updateAvailable","setUpdateAvailable","formData","setFormData","item_name","estimated_price","brand_preference","notes","added_by","added_by_name","purchaseData","setPurchaseData","purchased_by","purchased_by_name","actual_price","loadShoppingList","loadRoommates","checkForUpdates","pollInterval","setInterval","clearInterval","statusFilter","response","getAll","data","err","_err$response","_err$response$data","message","console","loadPurchaseHistory","getHistory","history","_err$response2","_err$response2$data","getMetadata","newLastModified","last_modified","refreshData","resetForm","resetPurchaseForm","handleInputChange","e","name","value","target","prev","handlePurchaseChange","handleRoommateSelect","field","roommateId","roommate","find","r","id","parseInt","handleSubmit","preventDefault","trim","itemData","parseFloat","update","map","item","create","metadataResponse","_err$response3","_err$response3$data","deleteItem","window","confirm","delete","_err$response4","_err$response4$data","startEditing","markPurchased","purchasePayload","i","_err$response5","_err$response5$data","formatPrice","price","toFixed","formatDate","dateString","Date","toLocaleDateString","className","children","onClick","title","status","length","onSubmit","htmlFor","type","onChange","placeholder","required","step","min","rows","purchase_date"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/roomie-roster/frontend/src/components/ShoppingListManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { shoppingListAPI, roommateAPI } from '../services/api';\n\nconst ShoppingListManager = () => {\n  const [items, setItems] = useState([]);\n  const [roommates, setRoommates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [showHistory, setShowHistory] = useState(false);\n  const [purchaseHistory, setPurchaseHistory] = useState([]);\n  const [filter, setFilter] = useState('active'); // active, purchased, all\n  \n  // Real-time update state\n  const [lastModified, setLastModified] = useState(null);\n  const [isPolling, setIsPolling] = useState(true);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  // Form state\n  const [formData, setFormData] = useState({\n    item_name: '',\n    estimated_price: '',\n    brand_preference: '',\n    notes: '',\n    added_by: '',\n    added_by_name: ''\n  });\n\n  // Purchase form state\n  const [purchaseData, setPurchaseData] = useState({\n    purchased_by: '',\n    purchased_by_name: '',\n    actual_price: '',\n    notes: ''\n  });\n\n  useEffect(() => {\n    loadShoppingList();\n    loadRoommates();\n    checkForUpdates(); // Initial metadata check\n  }, [filter]);\n\n  // Polling effect for real-time updates\n  useEffect(() => {\n    if (!isPolling) return;\n\n    const pollInterval = setInterval(() => {\n      checkForUpdates();\n    }, 5000); // Check every 5 seconds\n\n    return () => clearInterval(pollInterval);\n  }, [isPolling, lastModified]);\n\n  // Clean up polling when component unmounts\n  useEffect(() => {\n    return () => setIsPolling(false);\n  }, []);\n\n  const loadShoppingList = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const statusFilter = filter === 'all' ? null : filter;\n      const response = await shoppingListAPI.getAll(statusFilter);\n      setItems(response.data.items || []);\n    } catch (err) {\n      setError('Failed to load shopping list: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadRoommates = async () => {\n    try {\n      const response = await roommateAPI.getAll();\n      setRoommates(response.data);\n    } catch (err) {\n      console.error('Failed to load roommates:', err);\n    }\n  };\n\n  const loadPurchaseHistory = async () => {\n    try {\n      const response = await shoppingListAPI.getHistory(30);\n      setPurchaseHistory(response.data.history || []);\n    } catch (err) {\n      setError('Failed to load purchase history: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const checkForUpdates = async () => {\n    try {\n      const response = await shoppingListAPI.getMetadata();\n      const newLastModified = response.data.last_modified;\n      \n      if (lastModified && newLastModified !== lastModified) {\n        setUpdateAvailable(true);\n      } else if (!lastModified) {\n        // First time loading, set the timestamp without showing update notification\n        setLastModified(newLastModified);\n      }\n    } catch (err) {\n      console.error('Failed to check for updates:', err);\n      // Don't show error to user for polling failures\n    }\n  };\n\n  const refreshData = async () => {\n    setUpdateAvailable(false);\n    await loadShoppingList();\n    const response = await shoppingListAPI.getMetadata();\n    setLastModified(response.data.last_modified);\n  };\n\n  const resetForm = () => {\n    setFormData({\n      item_name: '',\n      estimated_price: '',\n      brand_preference: '',\n      notes: '',\n      added_by: '',\n      added_by_name: ''\n    });\n    setEditingItem(null);\n    setShowAddForm(false);\n  };\n\n  const resetPurchaseForm = () => {\n    setPurchaseData({\n      purchased_by: '',\n      purchased_by_name: '',\n      actual_price: '',\n      notes: ''\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handlePurchaseChange = (e) => {\n    const { name, value } = e.target;\n    setPurchaseData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleRoommateSelect = (field, roommateId) => {\n    const roommate = roommates.find(r => r.id === parseInt(roommateId));\n    if (field === 'added_by') {\n      setFormData(prev => ({\n        ...prev,\n        added_by: roommate ? roommate.id : '',\n        added_by_name: roommate ? roommate.name : ''\n      }));\n    } else if (field === 'purchased_by') {\n      setPurchaseData(prev => ({\n        ...prev,\n        purchased_by: roommate ? roommate.id : '',\n        purchased_by_name: roommate ? roommate.name : ''\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.item_name.trim() || !formData.added_by) return;\n\n    try {\n      setError(null);\n      const itemData = {\n        ...formData,\n        estimated_price: formData.estimated_price ? parseFloat(formData.estimated_price) : null\n      };\n\n      if (editingItem) {\n        // Update existing item\n        const response = await shoppingListAPI.update(editingItem.id, itemData);\n        setItems(items.map(item => item.id === editingItem.id ? response.data : item));\n      } else {\n        // Add new item\n        const response = await shoppingListAPI.create(itemData);\n        setItems([...items, response.data]);\n      }\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await shoppingListAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n      \n      resetForm();\n    } catch (err) {\n      setError('Failed to save item: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const deleteItem = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this item?')) return;\n\n    try {\n      setError(null);\n      await shoppingListAPI.delete(id);\n      setItems(items.filter(item => item.id !== id));\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await shoppingListAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n    } catch (err) {\n      setError('Failed to delete item: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const startEditing = (item) => {\n    setFormData({\n      item_name: item.item_name,\n      estimated_price: item.estimated_price || '',\n      brand_preference: item.brand_preference || '',\n      notes: item.notes || '',\n      added_by: item.added_by,\n      added_by_name: item.added_by_name\n    });\n    setEditingItem(item);\n    setShowAddForm(true);\n  };\n\n  const markPurchased = async (item) => {\n    if (!purchaseData.purchased_by) {\n      setError('Please select who purchased the item');\n      return;\n    }\n\n    try {\n      setError(null);\n      const purchasePayload = {\n        ...purchaseData,\n        actual_price: purchaseData.actual_price ? parseFloat(purchaseData.actual_price) : null\n      };\n\n      const response = await shoppingListAPI.markPurchased(item.id, purchasePayload);\n      setItems(items.map(i => i.id === item.id ? response.data.item : i));\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await shoppingListAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n      \n      resetPurchaseForm();\n    } catch (err) {\n      setError('Failed to mark item as purchased: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const formatPrice = (price) => {\n    return price ? `$${price.toFixed(2)}` : 'Not specified';\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading shopping list...</div>;\n  }\n\n  return (\n    <div className=\"shopping-list-manager\">\n      <div className=\"header\">\n        <h2>Shopping List</h2>\n        <div className=\"header-actions\">\n          <button\n            onClick={() => setShowAddForm(!showAddForm)}\n            className=\"button primary\"\n          >\n            {showAddForm ? 'Cancel' : 'Add Item'}\n          </button>\n          <button\n            onClick={() => {\n              setShowHistory(!showHistory);\n              if (!showHistory) loadPurchaseHistory();\n            }}\n            className=\"button secondary\"\n          >\n            {showHistory ? 'Hide History' : 'Purchase History'}\n          </button>\n          <button\n            onClick={() => setIsPolling(!isPolling)}\n            className={`button ${isPolling ? 'success' : 'secondary'}`}\n            title={isPolling ? 'Real-time updates enabled' : 'Real-time updates disabled'}\n          >\n            {isPolling ? '🔄 Live' : '⏸️ Paused'}\n          </button>\n        </div>\n      </div>\n\n      {/* Update notification */}\n      {updateAvailable && (\n        <div className=\"update-notification\">\n          <div className=\"update-content\">\n            <span>🔄 New changes available from other users!</span>\n            <button onClick={refreshData} className=\"button small primary\">\n              Refresh Now\n            </button>\n            <button onClick={() => setUpdateAvailable(false)} className=\"button small secondary\">\n              Dismiss\n            </button>\n          </div>\n        </div>\n      )}\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {/* Filter buttons */}\n      <div className=\"filter-buttons\">\n        <button\n          onClick={() => setFilter('active')}\n          className={`filter-btn ${filter === 'active' ? 'active' : ''}`}\n        >\n          Active Items ({items.filter(i => i.status === 'active').length})\n        </button>\n        <button\n          onClick={() => setFilter('purchased')}\n          className={`filter-btn ${filter === 'purchased' ? 'active' : ''}`}\n        >\n          Purchased ({items.filter(i => i.status === 'purchased').length})\n        </button>\n        <button\n          onClick={() => setFilter('all')}\n          className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n        >\n          All Items\n        </button>\n      </div>\n\n      {/* Add/Edit item form */}\n      {showAddForm && (\n        <form onSubmit={handleSubmit} className=\"shopping-form\">\n          <h3>{editingItem ? 'Edit Item' : 'Add New Item'}</h3>\n          \n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"item_name\">Item Name *</label>\n              <input\n                type=\"text\"\n                id=\"item_name\"\n                name=\"item_name\"\n                value={formData.item_name}\n                onChange={handleInputChange}\n                placeholder=\"e.g., Paper Towels\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"added_by\">Added By *</label>\n              <select\n                id=\"added_by\"\n                value={formData.added_by}\n                onChange={(e) => handleRoommateSelect('added_by', e.target.value)}\n                required\n              >\n                <option value=\"\">Select roommate...</option>\n                {roommates.map(roommate => (\n                  <option key={roommate.id} value={roommate.id}>\n                    {roommate.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"estimated_price\">Estimated Price</label>\n              <input\n                type=\"number\"\n                id=\"estimated_price\"\n                name=\"estimated_price\"\n                value={formData.estimated_price}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                min=\"0\"\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"brand_preference\">Brand Preference</label>\n              <input\n                type=\"text\"\n                id=\"brand_preference\"\n                name=\"brand_preference\"\n                value={formData.brand_preference}\n                onChange={handleInputChange}\n                placeholder=\"e.g., Bounty\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"notes\">Notes</label>\n            <textarea\n              id=\"notes\"\n              name=\"notes\"\n              value={formData.notes}\n              onChange={handleInputChange}\n              placeholder=\"Any additional notes...\"\n              rows=\"3\"\n            />\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\" className=\"button primary\">\n              {editingItem ? 'Update Item' : 'Add Item'}\n            </button>\n            <button type=\"button\" onClick={resetForm} className=\"button secondary\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n\n      {/* Purchase History */}\n      {showHistory && (\n        <div className=\"purchase-history\">\n          <h3>Recent Purchases (Last 30 Days)</h3>\n          {purchaseHistory.length === 0 ? (\n            <p>No purchases in the last 30 days.</p>\n          ) : (\n            <div className=\"history-list\">\n              {purchaseHistory.map(item => (\n                <div key={item.id} className=\"history-item\">\n                  <div className=\"history-content\">\n                    <h4>{item.item_name}</h4>\n                    <p>Purchased by: <strong>{item.purchased_by_name}</strong></p>\n                    <p>Date: {formatDate(item.purchase_date)}</p>\n                    <p>Price: {formatPrice(item.actual_price)}</p>\n                    {item.brand_preference && <p>Brand: {item.brand_preference}</p>}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Shopping list items */}\n      <div className=\"shopping-list\">\n        {items.length === 0 ? (\n          <p className=\"empty-state\">\n            {filter === 'active' ? 'No active items in the shopping list.' : \n             filter === 'purchased' ? 'No purchased items found.' : \n             'No items in the shopping list. Add your first item above!'}\n          </p>\n        ) : (\n          <div className=\"shopping-items\">\n            {items.map((item) => (\n              <div key={item.id} className={`shopping-item ${item.status}`}>\n                <div className=\"item-header\">\n                  <h4 className=\"item-name\">{item.item_name}</h4>\n                  <span className={`status-badge ${item.status}`}>\n                    {item.status === 'active' ? 'Need to Buy' : 'Purchased'}\n                  </span>\n                </div>\n                \n                <div className=\"item-details\">\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Estimated Price:</span>\n                    <span className=\"value\">{formatPrice(item.estimated_price)}</span>\n                  </div>\n                  {item.actual_price && (\n                    <div className=\"detail-item\">\n                      <span className=\"label\">Actual Price:</span>\n                      <span className=\"value\">{formatPrice(item.actual_price)}</span>\n                    </div>\n                  )}\n                  {item.brand_preference && (\n                    <div className=\"detail-item\">\n                      <span className=\"label\">Brand:</span>\n                      <span className=\"value\">{item.brand_preference}</span>\n                    </div>\n                  )}\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Added by:</span>\n                    <span className=\"value\">{item.added_by_name}</span>\n                  </div>\n                  {item.purchased_by_name && (\n                    <div className=\"detail-item\">\n                      <span className=\"label\">Purchased by:</span>\n                      <span className=\"value\">{item.purchased_by_name}</span>\n                    </div>\n                  )}\n                  {item.notes && (\n                    <div className=\"detail-item notes\">\n                      <span className=\"label\">Notes:</span>\n                      <span className=\"value\">{item.notes}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"item-actions\">\n                  {item.status === 'active' && (\n                    <>\n                      <div className=\"purchase-section\">\n                        <h5>Mark as Purchased</h5>\n                        <div className=\"purchase-form\">\n                          <select\n                            value={purchaseData.purchased_by}\n                            onChange={(e) => handleRoommateSelect('purchased_by', e.target.value)}\n                          >\n                            <option value=\"\">Who bought this?</option>\n                            {roommates.map(roommate => (\n                              <option key={roommate.id} value={roommate.id}>\n                                {roommate.name}\n                              </option>\n                            ))}\n                          </select>\n                          <input\n                            type=\"number\"\n                            placeholder=\"Actual price\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            value={purchaseData.actual_price}\n                            onChange={handlePurchaseChange}\n                            name=\"actual_price\"\n                          />\n                          <button\n                            onClick={() => markPurchased(item)}\n                            className=\"button small primary\"\n                          >\n                            Mark Purchased\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"item-controls\">\n                        <button\n                          onClick={() => startEditing(item)}\n                          className=\"button small secondary\"\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => deleteItem(item.id)}\n                          className=\"button small danger\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingListManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}