{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Chores API\nexport const choreAPI = {\n  getAll: () => api.get('/chores'),\n  create: chore => api.post('/chores', chore),\n  update: (id, chore) => api.put(`/chores/${id}`, chore),\n  delete: id => api.delete(`/chores/${id}`)\n};\n\n// Roommates API\nexport const roommateAPI = {\n  getAll: () => api.get('/roommates'),\n  create: roommate => api.post('/roommates', roommate),\n  update: (id, roommate) => api.put(`/roommates/${id}`, roommate),\n  delete: id => api.delete(`/roommates/${id}`)\n};\n\n// Assignments API\nexport const assignmentAPI = {\n  assignChores: () => api.post('/assign-chores'),\n  getCurrent: () => api.get('/current-assignments'),\n  resetCycle: () => api.post('/reset-cycle')\n};\n\n// Application state API\nexport const stateAPI = {\n  get: () => api.get('/state'),\n  health: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","choreAPI","getAll","get","chore","post","update","id","put","delete","roommateAPI","roommate","assignmentAPI","assignChores","getCurrent","resetCycle","stateAPI","health"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/roomie-roster/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Chores API\nexport const choreAPI = {\n  getAll: () => api.get('/chores'),\n  create: (chore) => api.post('/chores', chore),\n  update: (id, chore) => api.put(`/chores/${id}`, chore),\n  delete: (id) => api.delete(`/chores/${id}`),\n};\n\n// Roommates API\nexport const roommateAPI = {\n  getAll: () => api.get('/roommates'),\n  create: (roommate) => api.post('/roommates', roommate),\n  update: (id, roommate) => api.put(`/roommates/${id}`, roommate),\n  delete: (id) => api.delete(`/roommates/${id}`),\n};\n\n// Assignments API\nexport const assignmentAPI = {\n  assignChores: () => api.post('/assign-chores'),\n  getCurrent: () => api.get('/current-assignments'),\n  resetCycle: () => api.post('/reset-cycle'),\n};\n\n// Application state API\nexport const stateAPI = {\n  get: () => api.get('/state'),\n  health: () => api.get('/health'),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,UAAUF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,eAAeJ,MAAM,CAACK,GAAG,EAAE,CAAC;EAC7E,OAAOL,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,GAAG,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACTT,OAAO,CAACK,KAAK,CAAC,YAAY,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIL,KAAK,CAACM,OAAO,CAAC;EAClE,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMO,QAAQ,GAAG;EACtBC,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,SAAS,CAAC;EAChCtB,MAAM,EAAGuB,KAAK,IAAKxB,GAAG,CAACyB,IAAI,CAAC,SAAS,EAAED,KAAK,CAAC;EAC7CE,MAAM,EAAEA,CAACC,EAAE,EAAEH,KAAK,KAAKxB,GAAG,CAAC4B,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEH,KAAK,CAAC;EACtDK,MAAM,EAAGF,EAAE,IAAK3B,GAAG,CAAC6B,MAAM,CAAC,WAAWF,EAAE,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBR,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,YAAY,CAAC;EACnCtB,MAAM,EAAG8B,QAAQ,IAAK/B,GAAG,CAACyB,IAAI,CAAC,YAAY,EAAEM,QAAQ,CAAC;EACtDL,MAAM,EAAEA,CAACC,EAAE,EAAEI,QAAQ,KAAK/B,GAAG,CAAC4B,GAAG,CAAC,cAAcD,EAAE,EAAE,EAAEI,QAAQ,CAAC;EAC/DF,MAAM,EAAGF,EAAE,IAAK3B,GAAG,CAAC6B,MAAM,CAAC,cAAcF,EAAE,EAAE;AAC/C,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG;EAC3BC,YAAY,EAAEA,CAAA,KAAMjC,GAAG,CAACyB,IAAI,CAAC,gBAAgB,CAAC;EAC9CS,UAAU,EAAEA,CAAA,KAAMlC,GAAG,CAACuB,GAAG,CAAC,sBAAsB,CAAC;EACjDY,UAAU,EAAEA,CAAA,KAAMnC,GAAG,CAACyB,IAAI,CAAC,cAAc;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMW,QAAQ,GAAG;EACtBb,GAAG,EAAEA,CAAA,KAAMvB,GAAG,CAACuB,GAAG,CAAC,QAAQ,CAAC;EAC5Bc,MAAM,EAAEA,CAAA,KAAMrC,GAAG,CAACuB,GAAG,CAAC,SAAS;AACjC,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}