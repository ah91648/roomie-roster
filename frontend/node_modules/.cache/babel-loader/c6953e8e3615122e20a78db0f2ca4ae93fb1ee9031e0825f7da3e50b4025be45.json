{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/roomie-roster/frontend/src/components/RequestManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { requestAPI, roommateAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestManager = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [roommates, setRoommates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showRequestForm, setShowRequestForm] = useState(false);\n  const [activeTab, setActiveTab] = useState('pending'); // pending, my-requests, all\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Real-time update state\n  const [lastModified, setLastModified] = useState(null);\n  const [isPolling, setIsPolling] = useState(true);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  // Form state for new requests\n  const [formData, setFormData] = useState({\n    item_name: '',\n    estimated_price: '',\n    brand_preference: '',\n    notes: '',\n    requested_by: '',\n    requested_by_name: '',\n    approval_threshold: 2,\n    auto_approve_under: 10.00\n  });\n\n  // Approval form state\n  const [approvalNotes, setApprovalNotes] = useState({});\n  useEffect(() => {\n    loadRequests();\n    loadRoommates();\n    checkForUpdates();\n  }, [activeTab]);\n\n  // Polling effect for real-time updates\n  useEffect(() => {\n    if (!isPolling) return;\n    const pollInterval = setInterval(() => {\n      checkForUpdates();\n    }, 5000); // Check every 5 seconds\n\n    return () => clearInterval(pollInterval);\n  }, [isPolling, lastModified]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Clean up polling when component unmounts\n  useEffect(() => {\n    return () => setIsPolling(false);\n  }, []);\n  const loadRequests = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      let response;\n      if (activeTab === 'pending' && selectedUser) {\n        response = await requestAPI.getPendingForUser(selectedUser.id);\n      } else if (activeTab === 'my-requests' && selectedUser) {\n        response = await requestAPI.getAll();\n        // Filter to show only current user's requests\n        const allRequests = response.data.requests || [];\n        const myRequests = allRequests.filter(req => req.requested_by === selectedUser.id);\n        setRequests(myRequests);\n        return;\n      } else {\n        response = await requestAPI.getAll(activeTab === 'all' ? null : activeTab);\n      }\n      setRequests(response.data.requests || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to load requests: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadRoommates = async () => {\n    try {\n      const response = await roommateAPI.getAll();\n      setRoommates(response.data);\n\n      // Auto-select first roommate if none selected\n      if (!selectedUser && response.data.length > 0) {\n        setSelectedUser(response.data[0]);\n      }\n    } catch (err) {\n      console.error('Failed to load roommates:', err);\n    }\n  };\n  const checkForUpdates = async () => {\n    try {\n      const response = await requestAPI.getMetadata();\n      const newLastModified = response.data.last_modified;\n      if (lastModified && newLastModified !== lastModified) {\n        setUpdateAvailable(true);\n      } else if (!lastModified) {\n        setLastModified(newLastModified);\n      }\n    } catch (err) {\n      console.error('Failed to check for updates:', err);\n    }\n  };\n  const refreshData = async () => {\n    setUpdateAvailable(false);\n    await loadRequests();\n    const response = await requestAPI.getMetadata();\n    setLastModified(response.data.last_modified);\n  };\n  const resetForm = () => {\n    setFormData({\n      item_name: '',\n      estimated_price: '',\n      brand_preference: '',\n      notes: '',\n      requested_by: '',\n      requested_by_name: '',\n      approval_threshold: 2,\n      auto_approve_under: 10.00\n    });\n    setShowRequestForm(false);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleRoommateSelect = roommateId => {\n    const roommate = roommates.find(r => r.id === parseInt(roommateId));\n    setFormData(prev => ({\n      ...prev,\n      requested_by: roommate ? roommate.id : '',\n      requested_by_name: roommate ? roommate.name : ''\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.item_name.trim() || !formData.requested_by) return;\n    try {\n      setError(null);\n      const requestData = {\n        ...formData,\n        estimated_price: formData.estimated_price ? parseFloat(formData.estimated_price) : null,\n        approval_threshold: parseInt(formData.approval_threshold),\n        auto_approve_under: parseFloat(formData.auto_approve_under)\n      };\n      await requestAPI.create(requestData);\n      await loadRequests();\n\n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n      resetForm();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to submit request: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleApproval = async (requestId, approvalStatus) => {\n    if (!selectedUser) {\n      setError('Please select a user to approve requests');\n      return;\n    }\n    try {\n      setError(null);\n      const approvalData = {\n        approved_by: selectedUser.id,\n        approved_by_name: selectedUser.name,\n        approval_status: approvalStatus,\n        notes: approvalNotes[requestId] || ''\n      };\n      await requestAPI.approve(requestId, approvalData);\n      await loadRequests();\n\n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n\n      // Clear approval notes for this request\n      setApprovalNotes(prev => ({\n        ...prev,\n        [requestId]: ''\n      }));\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError('Failed to process approval: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message));\n    }\n  };\n  const deleteRequest = async requestId => {\n    if (!window.confirm('Are you sure you want to delete this request?')) return;\n    try {\n      setError(null);\n      await requestAPI.delete(requestId);\n      await loadRequests();\n\n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError('Failed to delete request: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message));\n    }\n  };\n  const getStatusBadgeClass = status => {\n    switch (status) {\n      case 'pending':\n        return 'status-pending';\n      case 'approved':\n        return 'status-approved';\n      case 'declined':\n        return 'status-declined';\n      case 'auto-approved':\n        return 'status-auto-approved';\n      default:\n        return 'status-unknown';\n    }\n  };\n  const formatPrice = price => {\n    return price ? `$${price.toFixed(2)}` : 'Not specified';\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading requests...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"request-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Item Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) || '',\n          onChange: e => {\n            const user = roommates.find(r => r.id === parseInt(e.target.value));\n            setSelectedUser(user);\n          },\n          className: \"user-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select User...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), roommates.map(roommate => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: roommate.id,\n            children: roommate.name\n          }, roommate.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowRequestForm(!showRequestForm),\n          className: \"button primary\",\n          children: showRequestForm ? 'Cancel' : 'New Request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPolling(!isPolling),\n          className: `button ${isPolling ? 'success' : 'secondary'}`,\n          title: isPolling ? 'Real-time updates enabled' : 'Real-time updates disabled',\n          children: isPolling ? '🔄 Live' : '⏸️ Paused'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), updateAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-notification\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDD04 New request changes available!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          className: \"button small primary\",\n          children: \"Refresh Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setUpdateAvailable(false),\n          className: \"button small secondary\",\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('pending'),\n        className: `tab-btn ${activeTab === 'pending' ? 'active' : ''}`,\n        children: [\"Pending Approvals (\", requests.filter(r => r.status === 'pending').length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('my-requests'),\n        className: `tab-btn ${activeTab === 'my-requests' ? 'active' : ''}`,\n        children: \"My Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('all'),\n        className: `tab-btn ${activeTab === 'all' ? 'active' : ''}`,\n        children: \"All Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), showRequestForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"request-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submit New Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"item_name\",\n            children: \"Item Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"item_name\",\n            name: \"item_name\",\n            value: formData.item_name,\n            onChange: handleInputChange,\n            placeholder: \"e.g., Premium Coffee Beans\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"requested_by\",\n            children: \"Requested By *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"requested_by\",\n            value: formData.requested_by,\n            onChange: e => handleRoommateSelect(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select roommate...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), roommates.map(roommate => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: roommate.id,\n              children: roommate.name\n            }, roommate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"estimated_price\",\n            children: \"Estimated Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"estimated_price\",\n            name: \"estimated_price\",\n            value: formData.estimated_price,\n            onChange: handleInputChange,\n            step: \"0.01\",\n            min: \"0\",\n            placeholder: \"0.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand_preference\",\n            children: \"Brand Preference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"brand_preference\",\n            name: \"brand_preference\",\n            value: formData.brand_preference,\n            onChange: handleInputChange,\n            placeholder: \"e.g., Blue Bottle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"auto_approve_under\",\n            children: \"Auto-approve under\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"auto_approve_under\",\n            name: \"auto_approve_under\",\n            value: formData.auto_approve_under,\n            onChange: handleInputChange,\n            step: \"0.01\",\n            min: \"0\",\n            placeholder: \"10.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"approval_threshold\",\n            children: \"Approvals needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"approval_threshold\",\n            name: \"approval_threshold\",\n            value: formData.approval_threshold,\n            onChange: handleInputChange,\n            min: \"1\",\n            max: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notes\",\n          name: \"notes\",\n          value: formData.notes,\n          onChange: handleInputChange,\n          placeholder: \"Why do you need this item?\",\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button primary\",\n          children: \"Submit Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: resetForm,\n          className: \"button secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"requests-list\",\n      children: requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state\",\n        children: activeTab === 'pending' ? 'No pending requests to approve.' : activeTab === 'my-requests' ? 'You have not submitted any requests.' : 'No requests found.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-cards\",\n        children: requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `request-card ${getStatusBadgeClass(request.status)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"request-name\",\n              children: request.item_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${getStatusBadgeClass(request.status)}`,\n              children: request.status.replace('-', ' ').toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Estimated Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: formatPrice(request.estimated_price)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this), request.brand_preference && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Brand:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: request.brand_preference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Requested by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: request.requested_by_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: formatDate(request.date_requested)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this), request.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item notes\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: request.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), request.status === 'pending' && activeTab === 'pending' && selectedUser && request.requested_by !== selectedUser.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"approval-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Your Decision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Optional approval notes...\",\n              value: approvalNotes[request.id] || '',\n              onChange: e => setApprovalNotes(prev => ({\n                ...prev,\n                [request.id]: e.target.value\n              })),\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"approval-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApproval(request.id, 'approved'),\n                className: \"button small success\",\n                children: \"\\u2705 Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApproval(request.id, 'declined'),\n                className: \"button small danger\",\n                children: \"\\u274C Decline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 19\n          }, this), request.approvals && request.approvals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"approval-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Approval History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, this), request.approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `approval-item ${approval.approval_status}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"approval-user\",\n                children: approval.approved_by_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `approval-status ${approval.approval_status}`,\n                children: [approval.approval_status === 'approved' ? '✅' : '❌', \" \", approval.approval_status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 25\n              }, this), approval.notes && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"approval-notes\",\n                children: [\"\\\"\", approval.notes, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 44\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 19\n          }, this), activeTab === 'my-requests' && request.status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteRequest(request.id),\n              className: \"button small danger\",\n              children: \"Delete Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 19\n          }, this)]\n        }, request.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestManager, \"m9ATTDHXmuM13SjhvXuw5Rchg/s=\");\n_c = RequestManager;\nexport default RequestManager;\nvar _c;\n$RefreshReg$(_c, \"RequestManager\");","map":{"version":3,"names":["React","useState","useEffect","requestAPI","roommateAPI","jsxDEV","_jsxDEV","RequestManager","_s","requests","setRequests","roommates","setRoommates","loading","setLoading","error","setError","showRequestForm","setShowRequestForm","activeTab","setActiveTab","selectedUser","setSelectedUser","lastModified","setLastModified","isPolling","setIsPolling","updateAvailable","setUpdateAvailable","formData","setFormData","item_name","estimated_price","brand_preference","notes","requested_by","requested_by_name","approval_threshold","auto_approve_under","approvalNotes","setApprovalNotes","loadRequests","loadRoommates","checkForUpdates","pollInterval","setInterval","clearInterval","response","getPendingForUser","id","getAll","allRequests","data","myRequests","filter","req","err","_err$response","_err$response$data","message","length","console","getMetadata","newLastModified","last_modified","refreshData","resetForm","handleInputChange","e","name","value","target","prev","handleRoommateSelect","roommateId","roommate","find","r","parseInt","handleSubmit","preventDefault","trim","requestData","parseFloat","create","metadataResponse","_err$response2","_err$response2$data","handleApproval","requestId","approvalStatus","approvalData","approved_by","approved_by_name","approval_status","approve","_err$response3","_err$response3$data","deleteRequest","window","confirm","delete","_err$response4","_err$response4$data","getStatusBadgeClass","status","formatPrice","price","toFixed","formatDate","dateString","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","user","map","onClick","title","onSubmit","htmlFor","type","placeholder","required","step","min","max","rows","request","replace","toUpperCase","date_requested","approvals","approval","index","_c","$RefreshReg$"],"sources":["/Users/angel/Desktop/vscode python/vscode python/MISC/Chores/roomie-roster/frontend/src/components/RequestManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { requestAPI, roommateAPI } from '../services/api';\n\nconst RequestManager = () => {\n  const [requests, setRequests] = useState([]);\n  const [roommates, setRoommates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showRequestForm, setShowRequestForm] = useState(false);\n  const [activeTab, setActiveTab] = useState('pending'); // pending, my-requests, all\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Real-time update state\n  const [lastModified, setLastModified] = useState(null);\n  const [isPolling, setIsPolling] = useState(true);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  // Form state for new requests\n  const [formData, setFormData] = useState({\n    item_name: '',\n    estimated_price: '',\n    brand_preference: '',\n    notes: '',\n    requested_by: '',\n    requested_by_name: '',\n    approval_threshold: 2,\n    auto_approve_under: 10.00\n  });\n\n  // Approval form state\n  const [approvalNotes, setApprovalNotes] = useState({});\n\n  useEffect(() => {\n    loadRequests();\n    loadRoommates();\n    checkForUpdates();\n  }, [activeTab]);\n\n  // Polling effect for real-time updates\n  useEffect(() => {\n    if (!isPolling) return;\n\n    const pollInterval = setInterval(() => {\n      checkForUpdates();\n    }, 5000); // Check every 5 seconds\n\n    return () => clearInterval(pollInterval);\n  }, [isPolling, lastModified]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Clean up polling when component unmounts\n  useEffect(() => {\n    return () => setIsPolling(false);\n  }, []);\n\n  const loadRequests = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      let response;\n      if (activeTab === 'pending' && selectedUser) {\n        response = await requestAPI.getPendingForUser(selectedUser.id);\n      } else if (activeTab === 'my-requests' && selectedUser) {\n        response = await requestAPI.getAll();\n        // Filter to show only current user's requests\n        const allRequests = response.data.requests || [];\n        const myRequests = allRequests.filter(req => req.requested_by === selectedUser.id);\n        setRequests(myRequests);\n        return;\n      } else {\n        response = await requestAPI.getAll(activeTab === 'all' ? null : activeTab);\n      }\n      \n      setRequests(response.data.requests || []);\n    } catch (err) {\n      setError('Failed to load requests: ' + (err.response?.data?.error || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadRoommates = async () => {\n    try {\n      const response = await roommateAPI.getAll();\n      setRoommates(response.data);\n      \n      // Auto-select first roommate if none selected\n      if (!selectedUser && response.data.length > 0) {\n        setSelectedUser(response.data[0]);\n      }\n    } catch (err) {\n      console.error('Failed to load roommates:', err);\n    }\n  };\n\n  const checkForUpdates = async () => {\n    try {\n      const response = await requestAPI.getMetadata();\n      const newLastModified = response.data.last_modified;\n      \n      if (lastModified && newLastModified !== lastModified) {\n        setUpdateAvailable(true);\n      } else if (!lastModified) {\n        setLastModified(newLastModified);\n      }\n    } catch (err) {\n      console.error('Failed to check for updates:', err);\n    }\n  };\n\n  const refreshData = async () => {\n    setUpdateAvailable(false);\n    await loadRequests();\n    const response = await requestAPI.getMetadata();\n    setLastModified(response.data.last_modified);\n  };\n\n  const resetForm = () => {\n    setFormData({\n      item_name: '',\n      estimated_price: '',\n      brand_preference: '',\n      notes: '',\n      requested_by: '',\n      requested_by_name: '',\n      approval_threshold: 2,\n      auto_approve_under: 10.00\n    });\n    setShowRequestForm(false);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleRoommateSelect = (roommateId) => {\n    const roommate = roommates.find(r => r.id === parseInt(roommateId));\n    setFormData(prev => ({\n      ...prev,\n      requested_by: roommate ? roommate.id : '',\n      requested_by_name: roommate ? roommate.name : ''\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.item_name.trim() || !formData.requested_by) return;\n\n    try {\n      setError(null);\n      const requestData = {\n        ...formData,\n        estimated_price: formData.estimated_price ? parseFloat(formData.estimated_price) : null,\n        approval_threshold: parseInt(formData.approval_threshold),\n        auto_approve_under: parseFloat(formData.auto_approve_under)\n      };\n\n      await requestAPI.create(requestData);\n      await loadRequests();\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n      \n      resetForm();\n    } catch (err) {\n      setError('Failed to submit request: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleApproval = async (requestId, approvalStatus) => {\n    if (!selectedUser) {\n      setError('Please select a user to approve requests');\n      return;\n    }\n\n    try {\n      setError(null);\n      const approvalData = {\n        approved_by: selectedUser.id,\n        approved_by_name: selectedUser.name,\n        approval_status: approvalStatus,\n        notes: approvalNotes[requestId] || ''\n      };\n\n      await requestAPI.approve(requestId, approvalData);\n      await loadRequests();\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n      \n      // Clear approval notes for this request\n      setApprovalNotes(prev => ({ ...prev, [requestId]: '' }));\n    } catch (err) {\n      setError('Failed to process approval: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const deleteRequest = async (requestId) => {\n    if (!window.confirm('Are you sure you want to delete this request?')) return;\n\n    try {\n      setError(null);\n      await requestAPI.delete(requestId);\n      await loadRequests();\n      \n      // Update lastModified timestamp after successful mutation\n      const metadataResponse = await requestAPI.getMetadata();\n      setLastModified(metadataResponse.data.last_modified);\n    } catch (err) {\n      setError('Failed to delete request: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'pending': return 'status-pending';\n      case 'approved': return 'status-approved';\n      case 'declined': return 'status-declined';\n      case 'auto-approved': return 'status-auto-approved';\n      default: return 'status-unknown';\n    }\n  };\n\n  const formatPrice = (price) => {\n    return price ? `$${price.toFixed(2)}` : 'Not specified';\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading requests...</div>;\n  }\n\n  return (\n    <div className=\"request-manager\">\n      <div className=\"header\">\n        <h2>Item Requests</h2>\n        <div className=\"header-actions\">\n          <select\n            value={selectedUser?.id || ''}\n            onChange={(e) => {\n              const user = roommates.find(r => r.id === parseInt(e.target.value));\n              setSelectedUser(user);\n            }}\n            className=\"user-selector\"\n          >\n            <option value=\"\">Select User...</option>\n            {roommates.map(roommate => (\n              <option key={roommate.id} value={roommate.id}>\n                {roommate.name}\n              </option>\n            ))}\n          </select>\n          <button\n            onClick={() => setShowRequestForm(!showRequestForm)}\n            className=\"button primary\"\n          >\n            {showRequestForm ? 'Cancel' : 'New Request'}\n          </button>\n          <button\n            onClick={() => setIsPolling(!isPolling)}\n            className={`button ${isPolling ? 'success' : 'secondary'}`}\n            title={isPolling ? 'Real-time updates enabled' : 'Real-time updates disabled'}\n          >\n            {isPolling ? '🔄 Live' : '⏸️ Paused'}\n          </button>\n        </div>\n      </div>\n\n      {/* Update notification */}\n      {updateAvailable && (\n        <div className=\"update-notification\">\n          <div className=\"update-content\">\n            <span>🔄 New request changes available!</span>\n            <button onClick={refreshData} className=\"button small primary\">\n              Refresh Now\n            </button>\n            <button onClick={() => setUpdateAvailable(false)} className=\"button small secondary\">\n              Dismiss\n            </button>\n          </div>\n        </div>\n      )}\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {/* Tab navigation */}\n      <div className=\"tab-navigation\">\n        <button\n          onClick={() => setActiveTab('pending')}\n          className={`tab-btn ${activeTab === 'pending' ? 'active' : ''}`}\n        >\n          Pending Approvals ({requests.filter(r => r.status === 'pending').length})\n        </button>\n        <button\n          onClick={() => setActiveTab('my-requests')}\n          className={`tab-btn ${activeTab === 'my-requests' ? 'active' : ''}`}\n        >\n          My Requests\n        </button>\n        <button\n          onClick={() => setActiveTab('all')}\n          className={`tab-btn ${activeTab === 'all' ? 'active' : ''}`}\n        >\n          All Requests\n        </button>\n      </div>\n\n      {/* Request submission form */}\n      {showRequestForm && (\n        <form onSubmit={handleSubmit} className=\"request-form\">\n          <h3>Submit New Request</h3>\n          \n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"item_name\">Item Name *</label>\n              <input\n                type=\"text\"\n                id=\"item_name\"\n                name=\"item_name\"\n                value={formData.item_name}\n                onChange={handleInputChange}\n                placeholder=\"e.g., Premium Coffee Beans\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"requested_by\">Requested By *</label>\n              <select\n                id=\"requested_by\"\n                value={formData.requested_by}\n                onChange={(e) => handleRoommateSelect(e.target.value)}\n                required\n              >\n                <option value=\"\">Select roommate...</option>\n                {roommates.map(roommate => (\n                  <option key={roommate.id} value={roommate.id}>\n                    {roommate.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"estimated_price\">Estimated Price</label>\n              <input\n                type=\"number\"\n                id=\"estimated_price\"\n                name=\"estimated_price\"\n                value={formData.estimated_price}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                min=\"0\"\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"brand_preference\">Brand Preference</label>\n              <input\n                type=\"text\"\n                id=\"brand_preference\"\n                name=\"brand_preference\"\n                value={formData.brand_preference}\n                onChange={handleInputChange}\n                placeholder=\"e.g., Blue Bottle\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"auto_approve_under\">Auto-approve under</label>\n              <input\n                type=\"number\"\n                id=\"auto_approve_under\"\n                name=\"auto_approve_under\"\n                value={formData.auto_approve_under}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                min=\"0\"\n                placeholder=\"10.00\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"approval_threshold\">Approvals needed</label>\n              <input\n                type=\"number\"\n                id=\"approval_threshold\"\n                name=\"approval_threshold\"\n                value={formData.approval_threshold}\n                onChange={handleInputChange}\n                min=\"1\"\n                max=\"10\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"notes\">Notes</label>\n            <textarea\n              id=\"notes\"\n              name=\"notes\"\n              value={formData.notes}\n              onChange={handleInputChange}\n              placeholder=\"Why do you need this item?\"\n              rows=\"3\"\n            />\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\" className=\"button primary\">\n              Submit Request\n            </button>\n            <button type=\"button\" onClick={resetForm} className=\"button secondary\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n\n      {/* Requests list */}\n      <div className=\"requests-list\">\n        {requests.length === 0 ? (\n          <p className=\"empty-state\">\n            {activeTab === 'pending' ? 'No pending requests to approve.' :\n             activeTab === 'my-requests' ? 'You have not submitted any requests.' :\n             'No requests found.'}\n          </p>\n        ) : (\n          <div className=\"request-cards\">\n            {requests.map((request) => (\n              <div key={request.id} className={`request-card ${getStatusBadgeClass(request.status)}`}>\n                <div className=\"request-header\">\n                  <h4 className=\"request-name\">{request.item_name}</h4>\n                  <span className={`status-badge ${getStatusBadgeClass(request.status)}`}>\n                    {request.status.replace('-', ' ').toUpperCase()}\n                  </span>\n                </div>\n                \n                <div className=\"request-details\">\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Estimated Price:</span>\n                    <span className=\"value\">{formatPrice(request.estimated_price)}</span>\n                  </div>\n                  {request.brand_preference && (\n                    <div className=\"detail-item\">\n                      <span className=\"label\">Brand:</span>\n                      <span className=\"value\">{request.brand_preference}</span>\n                    </div>\n                  )}\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Requested by:</span>\n                    <span className=\"value\">{request.requested_by_name}</span>\n                  </div>\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Date:</span>\n                    <span className=\"value\">{formatDate(request.date_requested)}</span>\n                  </div>\n                  {request.notes && (\n                    <div className=\"detail-item notes\">\n                      <span className=\"label\">Notes:</span>\n                      <span className=\"value\">{request.notes}</span>\n                    </div>\n                  )}\n                </div>\n\n                {/* Approval section for pending requests */}\n                {request.status === 'pending' && activeTab === 'pending' && selectedUser && \n                 request.requested_by !== selectedUser.id && (\n                  <div className=\"approval-section\">\n                    <h5>Your Decision</h5>\n                    <textarea\n                      placeholder=\"Optional approval notes...\"\n                      value={approvalNotes[request.id] || ''}\n                      onChange={(e) => setApprovalNotes(prev => ({ \n                        ...prev, \n                        [request.id]: e.target.value \n                      }))}\n                      rows=\"2\"\n                    />\n                    <div className=\"approval-actions\">\n                      <button\n                        onClick={() => handleApproval(request.id, 'approved')}\n                        className=\"button small success\"\n                      >\n                        ✅ Approve\n                      </button>\n                      <button\n                        onClick={() => handleApproval(request.id, 'declined')}\n                        className=\"button small danger\"\n                      >\n                        ❌ Decline\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Approval history */}\n                {request.approvals && request.approvals.length > 0 && (\n                  <div className=\"approval-history\">\n                    <h5>Approval History</h5>\n                    {request.approvals.map((approval, index) => (\n                      <div key={index} className={`approval-item ${approval.approval_status}`}>\n                        <span className=\"approval-user\">{approval.approved_by_name}</span>\n                        <span className={`approval-status ${approval.approval_status}`}>\n                          {approval.approval_status === 'approved' ? '✅' : '❌'} {approval.approval_status}\n                        </span>\n                        {approval.notes && <span className=\"approval-notes\">\"{approval.notes}\"</span>}\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Action buttons for my requests */}\n                {activeTab === 'my-requests' && request.status === 'pending' && (\n                  <div className=\"request-actions\">\n                    <button\n                      onClick={() => deleteRequest(request.id)}\n                      className=\"button small danger\"\n                    >\n                      Delete Request\n                    </button>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RequestManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}